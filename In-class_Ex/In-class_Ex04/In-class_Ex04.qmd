---
title: "In-class Exercise 4"
author: "Huynh Minh Phuong"
date: "May 06 2023"
date-modified: "`r Sys.Date()`"
execute:
  echo: true 
  eval: true
  warning: false
---

# Getting Started

## Load libraries 
```{r}
pacman::p_load(ggstatsplot, rstatix, gt, patchwork, tidyverse)
```

## Import data

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

# Visualizing normal distribution 

Visualising Normal Distribution
A QQ plot, short for "quantile-quantile" plot, is used to assess whether or not a set of data potentially came from some theoretical distribution. In most cases, this type of plot is used to determine whether or not a set of data follows a normal distribution.

If the data is normally distributed the points in a QQ plot will like on a straight diagonal line. Conversely, if the points deviate significantly from the straight diagonal line, then it's less likely that the data is normally distributed.

stat_qq_line() provide the line
stat_qq() provide the dots
echo:false will only plot out the graph
eval: false will only show the code chunk

:::panel-tabset

## The Plot
```{r}
#| echo: false
#| fig-width: 4
#| fig-height: 4
ggplot(exam_data,
       aes(sample = ENGLISH)) +
  stat_qq() +
  stat_qq_line()
```

## The code chunk
```{r}
#| eval: false
ggplot(exam_data,
       aes(sample = ENGLISH)) +
  stat_qq() +
  stat_qq_line()
```

:::


::: callout-note
We can see that the points deviate significantly from the straight diagonal line. This is a clear indication that the set of data is not normally distributed.
:::

# Combining statistical graph and analysis table
:::panel-tabset

## The plot

```{r}
#| echo: false
qq <- ggplot(exam_data,
             aes(sample=ENGLISH)) +
  stat_qq() +
  stat_qq_line()
sw_t <- exam_data %>%
  shapiro_test(ENGLISH) %>%
  gt()
tmp <- tempfile(fileext = '.png')
gtsave(sw_t, tmp)
table_png <- png::readPNG(tmp, native = TRUE)
qq + table_png
```

## The code chunk
```{r}
#| eval: false
qq <- ggplot(exam_data,
             aes(sample=ENGLISH)) +
  stat_qq() +
  stat_qq_line()
sw_t <- exam_data %>%
  shapiro_test(ENGLISH) %>%
  gt()
tmp <- tempfile(fileext = '.png')
gtsave(sw_t, tmp)
table_png <- png::readPNG(tmp, native = TRUE)
qq + table_png
```

:::

# Visualizing statistical results

## One sample test
```{r}
set.seed(1234)

gghistostats(
  data = exam_data,
  x = ENGLISH,
  type = "p",
  test.value = 60,
  xlab = "English scores"
)
```

## Two sample test
```{r}
ggbetweenstats(
  data = exam_data,
  x = GENDER, 
  y = MATHS,
  type = "p",
  messages = FALSE
)
```
