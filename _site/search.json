[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This website is my portfolio to showcase the different exercises that I have done to practice visualization skills and techniques.\nHands-on Exercises are pre-class preparation for our lectures.\nIn-Class Exercises are done during lectures to demonstrate important concepts taught by Prof. Kam Tin Seong.\nTake-home Exercises are mini projects that allow me to apply the skills I have learnt."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages have been installed. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\n\nexam_data <-read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a simple bar chart",
    "text": "Plotting a simple bar chart\n\nggplot(data=exam_data,\n       aes(y=forcats::fct_infreq(RACE)))+\n  geom_bar()+\n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"lightblue\", linetype=0))+\n  labs(y=\"Race\",\n       x=\"Count\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#sorted-bar-charts-with-frequencies-and-percentages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#sorted-bar-charts-with-frequencies-and-percentages",
    "title": "Hands-on Exercise 1",
    "section": "Sorted bar charts with frequencies and percentages",
    "text": "Sorted bar charts with frequencies and percentages\n\nggplot(data=exam_data,\n       aes(x=forcats::fct_infreq(RACE)))+\n  geom_bar()+\n  ylim(0,220)+\n  labs(x=\"Race\",\n       y=\"No. of\\nPupils\")+\n  theme(axis.title.y=element_text(angle=0))+\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100, 1), \"%\")),\n      vjust=-1)\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-mean-and-median-lines-on-histogram-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-mean-and-median-lines-on-histogram-plot",
    "title": "Hands-on Exercise 1",
    "section": "Adding mean and median lines on histogram plot",
    "text": "Adding mean and median lines on histogram plot\n\nggplot(data=exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins=20, \n                 color='black', \n                 fill='lightblue')+\n    labs(y=\"Count\",\n       x=\"Maths\")+\n    geom_vline(aes(xintercept=mean(MATHS, na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=1)+\n    geom_vline(aes(xintercept=median(MATHS, na.rm=T)),\n             color=\"grey30\",\n             linetype=\"dashed\", \n             size=1)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#background-histogram-for-added-context",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#background-histogram-for-added-context",
    "title": "Hands-on Exercise 1",
    "section": "Background histogram for added context",
    "text": "Background histogram for added context\n\nggplot(data=exam_data,\n       aes(x=ENGLISH, fill=GENDER))+\n  geom_histogram(data=exam_data[,-3], fill='grey', alpha=0.5)+\n  geom_histogram(colour='black')+\n  facet_wrap(~GENDER)+\n  guides(fill=\"none\")+\n  theme_bw()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#relationship-between-english-and-maths-scores",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#relationship-between-english-and-maths-scores",
    "title": "Hands-on Exercise 1",
    "section": "Relationship between English and Maths scores",
    "text": "Relationship between English and Maths scores\n\nggplot(data=exam_data,\n       aes(x=MATHS, y=ENGLISH))+\n  geom_point()+\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))+\n  geom_vline(aes(xintercept=50),\n             color=\"grey60\", \n             linetype=\"dashed\", \n             size=1)+\n  geom_hline(yintercept=50,\n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\n\n\nFirst, create an interactive ggplot object with geom_dotplot_interactive()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\n\n\n\n\nNext, use girafe() to create an interactive svg object: student’s ID displayed when mouse pointer hover on a data point of interest\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\nInclude a list object in the content of the tooltip.\n\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\ntooltip_css <- \"background-color:white; #<<\nfont-style:bold; color:black;\" #<<\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #<<\n    opts_tooltip(    #<<\n      css = tooltip_css)) #<<\n)                                        \n\n\n\n\n\n\n\n\n\ntooltip <- function(y, ymax, accuracy = .01) {\n  mean <- scales::number(y, accuracy = accuracy)\n  sem <- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point <- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\nDefault value hover_css=“fill:orange;”\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\n\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n\n\n\n\np1 <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 <- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\nHighlight_key() of plotly package is used as shared data. Two scatterplots will be created by using ggplot2 functions. Lastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\nd <- highlight_key(exam_data)\np1 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\n\n\n\n\n\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\n\n\nd <- highlight_key(exam_data) \np <- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg <- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\nSetting the `off` event (i.e., 'plotly_deselect') to match the `on` event (i.e., 'plotly_selected'). You can change this default via the `highlight()` function."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#getting-started-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#getting-started-1",
    "title": "Hands-on Exercise 3",
    "section": "Getting Started",
    "text": "Getting Started\n\nInstall and load R packages\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\n\nImport data\n\ncol <- c(\"Country\", \"Continent\")\nglobalPop <- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %>%\n  mutate_each_(funs(factor(.)), col) %>%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#gganimate-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#gganimate-method",
    "title": "Hands-on Exercise 3",
    "section": "gganimate method",
    "text": "gganimate method\n\nBuild a static population bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\nBuild the animated bubble plot\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year). ease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-method",
    "title": "Hands-on Exercise 3",
    "section": "plotly method",
    "text": "plotly method\n\nBuild animated bubble plot with ggplotly()\n\ngg <- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\nBuild animated buble plot with plot_ly()\n\nbp <- globalPop %>%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent, \n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          )\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "pacman::p_load(ggstatsplot, tidyverse)\n\n\n\n\n\nexam <- read_csv(\"data/Exam_data.csv\")\n\n\n\n\nA Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\nTwo-sample mean test of Maths scores by gender.\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n“ns” → only non-significant “s” → only significant “all” → everything\n\n\n\nOne-way ANOVA test on English score by race.\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\nSignificant Test of Correlation between Maths scores and English scores.\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\nMaths scores is binned into a 4-class variable by using cut().\n\nexam1 <- exam %>% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nSignificant Test of Association between Maths score and gender.\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)\n\n\n\n\n\n\n\n\nToyota Corolla case study will be used. The purpose of study is to build a model to discover factors affecting prices of used-cars by taking into consideration a set of explanatory variables.\n\n\n\npacman::p_load(readxl, performance, parameters, see)\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   <dbl> <chr>    <dbl>     <dbl>     <dbl>    <dbl>  <dbl>         <dbl>  <dbl>\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period <dbl>, HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>, …\n\n\n\n\n\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\n\nUse check_collinearity() of performance package\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\n\nUse check_normality() of performance package\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n <- check_normality(model1)\n\nplot(check_n)\n\n\n\n\n\n\n\nUse check_heteroscedasticity() of performance package\n\ncheck_h <- check_heteroscedasticity(model1)\n\nplot(check_h)\n\n\n\n\n\n\n\nUse check_model().\n\ncheck_model(model1)\n\n\n\n\n\n\n\nplot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.\n\nplot(parameters(model1))\n\n\n\n\n\n\n\nUse ggcoefstats() of ggstatsplot package to visualise the parameters of a regression model\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-uncertainty-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-uncertainty-of-point-estimates",
    "title": "Hands-on_Ex04",
    "section": "Visualizing Uncertainty of Point Estimates",
    "text": "Visualizing Uncertainty of Point Estimates\n\npacman::p_load(tidyverse, plotly, crosstalk, DT, ggdist, gganimate)\nexam <- read_csv(\"data/Exam_data.csv\")\n\n\nVisualizing uncertainty of point estimates: ggplot2 methods\n\nmy_sum <- exam %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n \n  \n    RACE \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    Chinese \n    193 \n    76.50777 \n    15.69040 \n    1.132357 \n  \n  \n    Indian \n    12 \n    60.66667 \n    23.35237 \n    7.041005 \n  \n  \n    Malay \n    108 \n    57.44444 \n    21.13478 \n    2.043177 \n  \n  \n    Others \n    9 \n    69.66667 \n    10.72381 \n    3.791438 \n  \n\n\n\n\n\nPlot the standard error of mean maths score by race.\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE,-mean), \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x=\"Race\") +\n  ggtitle(\"Standard error of mean \n          maths score by race\")\n\n\n\n\nPlot the 95% confidence interval of mean maths score by race.\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE,-mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x=\"Race\") +\n  ggtitle(\"95% confidence interval of mean \n          maths score by race\")+\n  theme_minimal()\n\n\n\n\nPlot interactive error bars for the 99% confidence interval of mean maths score by race.\n\nd <- highlight_key(my_sum) \np <- ggplot(d) +\n  geom_errorbar(\n    aes(x=reorder(RACE,-mean), \n        ymin=mean-2.58*se, \n        ymax=mean+2.58*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean,\n            text=paste(\"Race:\", RACE,\n                     \"<br>N:\", n,\n                     \"<br>Avg. Scores:\", round(mean, digits = 2),\n                     \"<br>99% CI:[\", round(mean - 2.58*se, digits = 2), \", \", round(mean + 2.58*se, digits = 2), \"]\")), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x=\"Race\") +\n  ggtitle(\"99% confidence interval of mean \n          maths score by race\")+\n  theme_minimal()\n\ngg <- highlight(ggplotly(p, tooltip=\"text\"),        \n                \"plotly_selected\")\n\ndt <- DT::datatable(d,\n                    colnames = c(\"\",\"No. of pupils\", \"Avg Scores\", \"Std Dev\", \"Std Error\")) |> \n  formatRound(columns = c(\"mean\", \"sd\", \"se\"), digits = 2)\n\ncrosstalk::bscols(gg,               \n                  dt, \n                  widths = 5)  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualising Uncertainty: ggdist package\nstat_pointinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +   #<<\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\nShowing 95% and 99% confidence interval with mean\n\nexam %>% \n  ggplot(aes(x = RACE,\n             y = MATHS)) +\n  \n  #refer to point_interval argument in stat_pointinterval() help\n  stat_pointinterval(\n    .point = mean,\n    .interval = c(qi(0.05), qi(0.01))    \n  ) +\n  \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\"\n  )\n\n\n\n\nstat_gradientinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "title": "Hands-on_Ex04",
    "section": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\n#devtools::install_github(\"wilkelab/ungeviz\", force = TRUE)\nlibrary(ungeviz)\n\n\nggplot(data = exam, \n       (aes(x = factor(RACE), y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = RACE), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3)+\n  xlab(\"Race\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#getting-started-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#getting-started-1",
    "title": "Hands-on_Ex04",
    "section": "Getting started",
    "text": "Getting started\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)\n\n\ncovid19 <- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %>%\n  mutate_if(is.character, as.factor)\n\ncovid19\n\n# A tibble: 267 × 7\n   `Sub-district ID` City       District `Sub-district` Positive Recovered Death\n               <dbl> <fct>      <fct>    <fct>             <dbl>     <dbl> <dbl>\n 1        3172051003 JAKARTA U… PADEMAN… ANCOL              1776      1691    26\n 2        3173041007 JAKARTA B… TAMBORA  ANGKE              1783      1720    29\n 3        3175041005 JAKARTA T… KRAMAT … BALE KAMBANG       2049      1964    31\n 4        3175031003 JAKARTA T… JATINEG… BALI MESTER         827       797    13\n 5        3175101006 JAKARTA T… CIPAYUNG BAMBU APUS         2866      2792    27\n 6        3174031002 JAKARTA S… MAMPANG… BANGKA             1828      1757    26\n 7        3175051002 JAKARTA T… PASAR R… BARU               2541      2433    37\n 8        3175041004 JAKARTA T… KRAMAT … BATU AMPAR         3608      3445    68\n 9        3171071002 JAKARTA P… TANAH A… BENDUNGAN HIL…     2012      1937    38\n10        3175031002 JAKARTA T… JATINEG… BIDARA CINA        2900      2773    52\n# ℹ 257 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods",
    "title": "Hands-on_Ex04",
    "section": "FunnelPlotR methods",
    "text": "FunnelPlotR methods\nFunnelPlotR package requires a numerator (events of interest), denominator (population to be considered) and group:\nlimit: plot limits (95 or 99). label_outliers: label outliers (true or false). Poisson_limits: add Poisson limits to the plot. OD_adjust: add overdispersed limits to the plot. xrange and yrange: specify the range to display for axes\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #<<           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #<<\n  y_label = \"Cumulative Fatality Rate\"  #<<\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "title": "Hands-on_Ex04",
    "section": "Funnel Plot for Fair Visual Comparison: ggplot2 methods",
    "text": "Funnel Plot for Fair Visual Comparison: ggplot2 methods\nDerive cumulative death rate and standard error of cumulative death rate.\n\ndf <- covid19 %>%\n  mutate(rate = Death / Positive) %>%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %>%\n  filter(rate > 0)\n\nCompute fit.mean\n\nfit.mean <- weighted.mean(df$rate, 1/df$rate.se^2)\n\nCalculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq <- seq(1, max(df$Positive), 1)\nnumber.ll95 <- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 <- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 <- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 <- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI <- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\n\nPlot a static funnel plot\n\np <- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\n\n\nPlot Interactive funnel plot\nUse ggplotly() of plotly r package.\n\nfp_ggplotly <- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "Code chunk below will be used to check if these packages have been installed and also will load them onto your working R environment.\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)\n\n\n\n\n\n\nexam_data <-read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#anotation",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#anotation",
    "title": "Hands-on Exercise 2",
    "section": "Anotation",
    "text": "Anotation\n\nAnotation with ggrepel\nReplace geom_text() by geom_text_repel() and geom_label() by geom_label_repel.\n\nggplot(data=exam_data,\n       aes(y=ENGLISH,x=MATHS))+\n  geom_point()+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")+\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))+\n  geom_smooth(method=lm, \n              size=0.5)+\n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#theme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#theme",
    "title": "Hands-on Exercise 2",
    "section": "Theme",
    "text": "Theme\n\nWorking with ggtheme package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\nWorking with hrbthems package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#composite-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#composite-graphs",
    "title": "Hands-on Exercise 2",
    "section": "Composite graphs",
    "text": "Composite graphs\n\nPathwork methods\n\nCreating a composite figure with tag\n\np1 <- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n#“|” operator to stack two ggplot2 graphs\n#“/” operator to place the plots beside each other\n#“()” operator the define the sequence of the plotting\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\nCreating figure with insert\n\np12 <- p1|p2\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\nCreating a composite figure by using patchwork and ggtheme\n\npatchwork <- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "pacman::p_load(ggstatsplot, rstatix, gt, patchwork, tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#one-sample-test",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#one-sample-test",
    "title": "In-class Exercise 4",
    "section": "One sample test",
    "text": "One sample test\n\nset.seed(1234)\n\ngghistostats(\n  data = exam_data,\n  x = ENGLISH,\n  type = \"p\",\n  test.value = 60,\n  xlab = \"English scores\"\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#two-sample-test",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#two-sample-test",
    "title": "In-class Exercise 4",
    "section": "Two sample test",
    "text": "Two sample test\n\nggbetweenstats(\n  data = exam_data,\n  x = GENDER, \n  y = MATHS,\n  type = \"p\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In class Exercise 5",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\npackage 'igraph' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\User\\AppData\\Local\\Temp\\RtmpmkSHaR\\downloaded_packages\npackage 'tidygraph' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\User\\AppData\\Local\\Temp\\RtmpmkSHaR\\downloaded_packages\npackage 'polyclip' successfully unpacked and MD5 sums checked\npackage 'ggforce' successfully unpacked and MD5 sums checked\npackage 'graphlayouts' successfully unpacked and MD5 sums checked\npackage 'ggraph' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\User\\AppData\\Local\\Temp\\RtmpmkSHaR\\downloaded_packages\npackage 'visNetwork' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\User\\AppData\\Local\\Temp\\RtmpmkSHaR\\downloaded_packages\npackage 'tzdb' successfully unpacked and MD5 sums checked\npackage 'cpp11' successfully unpacked and MD5 sums checked\npackage 'clock' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\User\\AppData\\Local\\Temp\\RtmpmkSHaR\\downloaded_packages\n\n\n\n\n\n\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\n\n\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\n\n\nData type SentDate should be converted to date. Get information of the day in the week that emails are sent by using wday()\n\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 10\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    <date> 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     <ord> Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…\n\n\n\n\n\nFilter work related subjects Exclude emails sent to self Count the numbers of emails as weight\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%\n  filter(Weight > 1) %>%\n  ungroup()\n\nglimpse(GAStech_edges_aggregated)\n\nRows: 1,372\nColumns: 4\n$ source  <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  <dbl> 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday <ord> Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  <int> 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…\n\n\n\n\n\n\n\n\nGraph is directed from source to target\n\n\nCreate a graph object\n\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 54 × 4\n     id label               Department     Title                                \n  <dbl> <chr>               <chr>          <chr>                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# ℹ 48 more rows\n#\n# A tibble: 1,372 × 4\n   from    to Weekday Weight\n  <int> <int> <ord>    <int>\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows\n\n\n\n\n\nData Preparation\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %>%\n  rename(from = id) %>%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %>%\n  rename(to = id) %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(from, to) %>%\n    summarise(weight = n()) %>%\n  filter(from!=to) %>%\n  filter(weight > 1) %>%\n  ungroup()\n\nForce directed graph: with forces pushing nodes apart and links pulling connected nodes together\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#load-packages",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#load-packages",
    "title": "In class Exercise 5",
    "section": "Load packages",
    "text": "Load packages\n\npacman::p_load(jsonlite,tidygraph,ggraph,visNetwork,tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#import-json-file",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#import-json-file",
    "title": "In class Exercise 5",
    "section": "Import Json file",
    "text": "Import Json file\n\nMC1<-fromJSON(\"data/MC1.json\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#extract-node-information",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#extract-node-information",
    "title": "In class Exercise 5",
    "section": "Extract node information",
    "text": "Extract node information\n\nMC1_nodes <- as_tibble(MC1$nodes) %>% \n  select(id,type,country)\n\nglimpse(MC1_nodes)\n\nRows: 3,428\nColumns: 3\n$ id      <chr> \"Spanish Shrimp  Carriers\", \"12744\", \"143129355\", \"7775\", \"101…\n$ type    <chr> \"company\", \"organization\", \"organization\", \"organization\", \"or…\n$ country <chr> \"Nalakond\", NA, NA, NA, NA, NA, NA, \"Rio Isla\", NA, NA, NA, NA…"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#extract-edge-information",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#extract-edge-information",
    "title": "In class Exercise 5",
    "section": "Extract edge information",
    "text": "Extract edge information\n\nMC1_edges <-as_tibble(MC1$links) %>% \n  select(source, target, type, weight, key)\n\nglimpse(MC1_edges)\n\nRows: 11,069\nColumns: 5\n$ source <chr> \"Spanish Shrimp  Carriers\", \"Spanish Shrimp  Carriers\", \"Spanis…\n$ target <chr> \"12744\", \"21323516\", \"290834957\", \"3506021\", \"Conventionâ\", \"22…\n$ type   <chr> \"ownership\", \"partnership\", \"partnership\", \"ownership\", \"family…\n$ weight <dbl> 0.9001396, 0.8458973, 0.9648761, 0.9642126, 0.8234858, 0.893152…\n$ key    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "A sample survey of representative residents of City of Engagement located at Country of Nowhere was conducted to collect data related to demographic and spending patterns. This data will be used to assist in community revitalization efforts, including how to allocate city renewal grant.\nThe objective is to use appropriate static and interactive statistical graphics methods to provide an user-friendly and interactive solution that helps city managers and planners to explore the complex data in an engaging way and reveal hidden patterns."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-and-load-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-and-load-packages",
    "title": "Take-home Exercise 1",
    "section": "Install and load packages",
    "text": "Install and load packages\n\n\nShow code\npacman::p_load(plotly, ggstatsplot, knitr, patchwork, ggdist, ggthemes,ggridges, tidyverse, pals, viridis, gganimate, reshape2, lubridate, zoo, transformr, ggiraph)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-and-view-datasets",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-and-view-datasets",
    "title": "Take-home Exercise 1",
    "section": "Import and view datasets",
    "text": "Import and view datasets\nLoad demographic data and data summary statistics\n\n\nShow code\ndemo_info<-read_csv(\"data/Participants.csv\")\nsummary(demo_info)\n\n\n participantId    householdSize    haveKids            age       \n Min.   :   0.0   Min.   :1.000   Mode :logical   Min.   :18.00  \n 1st Qu.: 252.5   1st Qu.:1.000   FALSE:710       1st Qu.:29.00  \n Median : 505.0   Median :2.000   TRUE :301       Median :39.00  \n Mean   : 505.0   Mean   :1.964                   Mean   :39.07  \n 3rd Qu.: 757.5   3rd Qu.:3.000                   3rd Qu.:50.00  \n Max.   :1010.0   Max.   :3.000                   Max.   :60.00  \n educationLevel     interestGroup        joviality       \n Length:1011        Length:1011        Min.   :0.000204  \n Class :character   Class :character   1st Qu.:0.240074  \n Mode  :character   Mode  :character   Median :0.477539  \n                                       Mean   :0.493794  \n                                       3rd Qu.:0.746819  \n                                       Max.   :0.999234  \n\n\nView all columns and data type for each column\n\n\nShow code\nglimpse(demo_info)\n\n\nRows: 1,011\nColumns: 7\n$ participantId  <dbl> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n$ householdSize  <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ haveKids       <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, T…\n$ age            <dbl> 36, 25, 35, 21, 43, 32, 26, 27, 20, 35, 48, 27, 34, 18,…\n$ educationLevel <chr> \"HighSchoolOrCollege\", \"HighSchoolOrCollege\", \"HighScho…\n$ interestGroup  <chr> \"H\", \"B\", \"A\", \"I\", \"H\", \"D\", \"I\", \"A\", \"G\", \"D\", \"D\", …\n$ joviality      <dbl> 0.001626703, 0.328086500, 0.393469590, 0.138063446, 0.8…\n\n\nis.na() function is also used to confirm that there are no missing values in the demo_info dataset.\n\n\nShow code\n#Check for mising values\nany(is.na(demo_info))\n\n\n[1] FALSE\n\n\n\n\nShow code\n# check unique values and their frequency for each column\ndemo_info\n\n\n# A tibble: 1,011 × 7\n   participantId householdSize haveKids   age educationLevel      interestGroup\n           <dbl>         <dbl> <lgl>    <dbl> <chr>               <chr>        \n 1             0             3 TRUE        36 HighSchoolOrCollege H            \n 2             1             3 TRUE        25 HighSchoolOrCollege B            \n 3             2             3 TRUE        35 HighSchoolOrCollege A            \n 4             3             3 TRUE        21 HighSchoolOrCollege I            \n 5             4             3 TRUE        43 Bachelors           H            \n 6             5             3 TRUE        32 HighSchoolOrCollege D            \n 7             6             3 TRUE        26 HighSchoolOrCollege I            \n 8             7             3 TRUE        27 Bachelors           A            \n 9             8             3 TRUE        20 Bachelors           G            \n10             9             3 TRUE        35 Bachelors           D            \n# ℹ 1,001 more rows\n# ℹ 1 more variable: joviality <dbl>\n\n\nLoad financial transaction data and check summary statistics\n\n\nShow code\ntransactions<-read_csv(\"data/FinancialJournal.csv\")\nsummary(transactions)\n\n\n participantId      timestamp                        category        \n Min.   :   0.0   Min.   :2022-03-01 00:00:00.00   Length:1513636    \n 1st Qu.: 222.0   1st Qu.:2022-05-24 13:25:00.00   Class :character  \n Median : 464.0   Median :2022-08-25 15:00:00.00   Mode  :character  \n Mean   : 480.9   Mean   :2022-08-26 05:00:48.42                     \n 3rd Qu.: 726.0   3rd Qu.:2022-11-27 07:25:00.00                     \n Max.   :1010.0   Max.   :2023-02-28 23:55:00.00                     \n     amount         \n Min.   :-1562.726  \n 1st Qu.:   -5.594  \n Median :   -4.000  \n Mean   :   20.047  \n 3rd Qu.:   21.598  \n Max.   : 4096.526  \n\n\nView all columns and data type for each column\n\n\nShow code\nglimpse(transactions)\n\n\nRows: 1,513,636\nColumns: 4\n$ participantId <dbl> 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,…\n$ timestamp     <dttm> 2022-03-01, 2022-03-01, 2022-03-01, 2022-03-01, 2022-03…\n$ category      <chr> \"Wage\", \"Shelter\", \"Education\", \"Wage\", \"Shelter\", \"Educ…\n$ amount        <dbl> 2472.50756, -554.98862, -38.00538, 2046.56221, -554.9886…\n\n\nCheck for missing values\n\n\nShow code\nany(is.na(transactions))\n\n\n[1] FALSE"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-cleaning-and-wrangling",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-cleaning-and-wrangling",
    "title": "Take-home Exercise 1",
    "section": "Data Cleaning and Wrangling",
    "text": "Data Cleaning and Wrangling\nLooking at the data summary, we notice a few problems:\n\nWrong data type\nData type is character for nominal data (participantId), categorical data (interestGroup in demo_info and category in transactions) and ordinal data (educationLevel in demo_info). We need to use as.factor() to convert these attributes to the correct data type. We also need to add order to the educationLevel.\nAlso the data type is wrong for householdSize in demo_info, we used as.integer() to convert householdSize to discrete data.\n\n\nShow code\n# Nominal and Categorical data\ndemo_info$participantId<-as.factor(demo_info$participantId)\ntransactions$participantId<-as.factor(transactions$participantId)\n\ndemo_info$educationLevel<-as.factor(demo_info$educationLevel)\ndemo_info$interestGroup<- as.factor(demo_info$interestGroup)\ntransactions$category<-as.factor(transactions$category)\n\n# Check categories in educationLevel using levels()\n\nlevels(demo_info$educationLevel)\n\n\n[1] \"Bachelors\"           \"Graduate\"            \"HighSchoolOrCollege\"\n[4] \"Low\"                \n\n\nShow code\n# Assign orders to ordinal data educationLevel\n\ndemo_info$educationLevel<-factor((demo_info$educationLevel),\n                                 levels=c(\"Low\",\"HighSchoolOrCollege\",\"Bachelors\", \"Graduate\"))\n\n\n# Discrete data\n\ndemo_info$householdSize<-as.integer(demo_info$householdSize)\n\n\n\n\nDuplicated Data\nDuplicated data is detected by select rows with duplicate data for financial journal. Since at each timestamp there can only be one single transaction of the same category and amount, the duplicate data should be excluded from analysis.\n\n\nShow code\n#check for duplicates; find all rows with the same values for all columns\ntransactions[duplicated(transactions),]\n\n\n# A tibble: 1,113 × 4\n   participantId timestamp           category   amount\n   <fct>         <dttm>              <fct>       <dbl>\n 1 0             2022-03-01 00:00:00 Shelter    -555. \n 2 0             2022-03-01 00:00:00 Education   -38.0\n 3 1             2022-03-01 00:00:00 Shelter    -555. \n 4 1             2022-03-01 00:00:00 Education   -38.0\n 5 2             2022-03-01 00:00:00 Shelter    -557. \n 6 2             2022-03-01 00:00:00 Education   -12.8\n 7 3             2022-03-01 00:00:00 Shelter    -555. \n 8 3             2022-03-01 00:00:00 Education   -38.0\n 9 4             2022-03-01 00:00:00 Shelter   -1556. \n10 4             2022-03-01 00:00:00 Education   -12.8\n# ℹ 1,103 more rows\n\n\nIn total, 1113 rows of duplicate data were hidden and excluded from analysis. distinct() function is used to keep only unique/distinct rows from a data frame. If there are duplicate rows, only the first row is preserved.\n\n\nShow code\n#Remove duplicate rows\ntransactions<-transactions %>% distinct()\n\n# Check that duplicates have been removed\ntransactions[duplicated(transactions),]\n\n\n# A tibble: 0 × 4\n# ℹ 4 variables: participantId <fct>, timestamp <dttm>, category <fct>,\n#   amount <dbl>\n\n\n\n\nConvert negative transactions value to positive\n\n\nShow code\ntransactions$amount <-abs(transactions$amount)\n\n\n\n\nExtract month from timestamp and get monthly expense data\nSince wage and expenses such as shelter are paid monthly and there are only 12 months (3/2022 to 2/2023) in the dataset, only month data is needed from the timestamp column.\n\n\nShow code\n#mutate date\ntransactions <-transactions %>% \n  mutate(month=as.yearmon(timestamp, \"%Y %m\"))\n\nhead(transactions)\n\n\n# A tibble: 6 × 5\n  participantId timestamp           category  amount month    \n  <fct>         <dttm>              <fct>      <dbl> <yearmon>\n1 0             2022-03-01 00:00:00 Wage      2473.  Mar 2022 \n2 0             2022-03-01 00:00:00 Shelter    555.  Mar 2022 \n3 0             2022-03-01 00:00:00 Education   38.0 Mar 2022 \n4 1             2022-03-01 00:00:00 Wage      2047.  Mar 2022 \n5 1             2022-03-01 00:00:00 Shelter    555.  Mar 2022 \n6 1             2022-03-01 00:00:00 Education   38.0 Mar 2022 \n\n\n\n\nShow code\n# Use group by to get monthly expense by participantID, month and category\n\ntransactions<-transactions %>%\n  select(participantId,month,category,amount) %>% \n  group_by(participantId,month,category)%>%\n  summarize(monthly_amt=sum(amount))\n\ntransactions\n\n\n# A tibble: 44,524 × 4\n# Groups:   participantId, month [10,691]\n   participantId month     category   monthly_amt\n   <fct>         <yearmon> <fct>            <dbl>\n 1 0             Mar 2022  Education         38.0\n 2 0             Mar 2022  Food             268. \n 3 0             Mar 2022  Recreation       349. \n 4 0             Mar 2022  Shelter          555. \n 5 0             Mar 2022  Wage           11932. \n 6 0             Apr 2022  Education         38.0\n 7 0             Apr 2022  Food             266. \n 8 0             Apr 2022  Recreation       219. \n 9 0             Apr 2022  Shelter          555. \n10 0             Apr 2022  Wage            8637. \n# ℹ 44,514 more rows\n\n\n\n\nConvert transaction category to columns\n\n\nShow code\n# Put value 0 for missing values, rental adjustment category is not applicable for all participants \ntransactions_amt<-transactions %>% \n  pivot_wider(\n    names_from=category,\n    values_from=monthly_amt,\n    values_fill = 0)\n\ntransactions_amt\n\n\n# A tibble: 10,691 × 8\n# Groups:   participantId, month [10,691]\n   participantId month  Education  Food Recreation Shelter   Wage RentAdjustment\n   <fct>         <year>     <dbl> <dbl>      <dbl>   <dbl>  <dbl>          <dbl>\n 1 0             Mar 2…      38.0  268.      349.     555. 11932.              0\n 2 0             Apr 2…      38.0  266.      219.     555.  8637.              0\n 3 0             May 2…      38.0  265.      383.     555.  9048.              0\n 4 0             Jun 2…      38.0  257.      466.     555.  9048.              0\n 5 0             Jul 2…      38.0  270.     1070.     555.  8637.              0\n 6 0             Aug 2…      38.0  262.      314.     555.  9459.              0\n 7 0             Sep 2…      38.0  256.      295.     555.  9048.              0\n 8 0             Oct 2…      38.0  267.       25.0    555.  8637.              0\n 9 0             Nov 2…      38.0  261.      377.     555.  9048.              0\n10 0             Dec 2…      38.0  266.      357.     555.  9048.              0\n# ℹ 10,681 more rows\n\n\n\n\nGroup Shelter and Rental Adjustment as Rental expense\nThe actual rental expense should take into account the rental adjustment for an accurate presentation. Rental expense is calculated by the following formula: Rental expense=Shelter - RentAdjustment\nWe will also get the total spending from combining all expenses.\n\n\nShow code\ntransactions_amt<-transactions_amt%>% \n  mutate(Rent=Shelter - RentAdjustment) %>% \n  mutate(Monthly_spend=sum(Education, Food, Recreation, Rent))\n\nsummary(transactions_amt)\n\n\n participantId       month        Education          Food      \n 0      :   12   Min.   :2022   Min.   : 0.00   Min.   : 32.0  \n 1      :   12   1st Qu.:2022   1st Qu.: 0.00   1st Qu.:283.4  \n 2      :   12   Median :2023   Median : 0.00   Median :308.6  \n 3      :   12   Mean   :2023   Mean   :13.10   Mean   :346.4  \n 4      :   12   3rd Qu.:2023   3rd Qu.:12.81   3rd Qu.:422.0  \n 5      :   12   Max.   :2023   Max.   :91.14   Max.   :590.4  \n (Other):10619                                                 \n   Recreation        Shelter            Wage       RentAdjustment    \n Min.   :   0.0   Min.   :   0.0   Min.   : 1600   Min.   :   0.000  \n 1st Qu.: 242.0   1st Qu.: 433.4   1st Qu.: 2546   1st Qu.:   0.000  \n Median : 377.4   Median : 652.3   Median : 3614   Median :   0.000  \n Mean   : 387.6   Mean   : 633.8   Mean   : 4265   Mean   :   5.138  \n 3rd Qu.: 514.0   3rd Qu.: 779.2   3rd Qu.: 5171   3rd Qu.:   0.000  \n Max.   :1962.1   Max.   :5829.6   Max.   :21335   Max.   :4809.283  \n                                                                     \n      Rent        Monthly_spend \n Min.   :   0.0   Min.   :  32  \n 1st Qu.: 433.4   1st Qu.:1126  \n Median : 649.7   Median :1392  \n Mean   : 628.7   Mean   :1376  \n 3rd Qu.: 778.3   3rd Qu.:1622  \n Max.   :1556.4   Max.   :3463  \n                                \n\n\n\n\nGet median monthly spending\nSince Education expense is mostly zero in value, we can exclude Education from analysis and only include education as part of total monthly expenses\n\n\nShow code\nmedian_spend<-transactions_amt %>% \n select(participantId, month, Food, Recreation, Rent, Monthly_spend, Wage) %>% \n  group_by(participantId)%>%\n  summarize(Food=median(Food),\n            Recreation=median(Recreation),\n            Wage=median(Wage),\n            Rent=median(Rent),\n            Monthly_spend=median(Monthly_spend))\nsummary(median_spend)\n\n\n participantId       Food         Recreation         Wage      \n 0      :   1   Min.   : 32.0   Min.   :  0.0   Min.   : 1760  \n 1      :   1   1st Qu.:274.4   1st Qu.:158.9   1st Qu.: 2468  \n 2      :   1   Median :301.2   Median :354.1   Median : 3230  \n 3      :   1   Mean   :313.8   Mean   :312.3   Mean   : 3913  \n 4      :   1   3rd Qu.:420.3   3rd Qu.:453.4   3rd Qu.: 4611  \n 5      :   1   Max.   :582.2   Max.   :819.0   Max.   :17600  \n (Other):1005                                                  \n      Rent        Monthly_spend   \n Min.   :   0.0   Min.   :  32.0  \n 1st Qu.: 389.4   1st Qu.: 999.2  \n Median : 603.5   Median :1313.4  \n Mean   : 552.4   Mean   :1191.5  \n 3rd Qu.: 761.2   3rd Qu.:1545.0  \n Max.   :1556.4   Max.   :2539.2  \n                                  \n\n\n\n\nRemove outliers\n\n\nShow code\n# boxplot(median_spend$Food)\n# left skewed distribution\nquartiles <-quantile(median_spend$Food, probs=c(.25,.75))\nIQR<-IQR(median_spend$Food)\n\nlower <-quartiles[1]-1.5*IQR\nupper <-quartiles[2]+1.5*IQR\n\nmedian_spend<-median_spend %>% \n  filter((Food>=lower) & (Food <=upper))\n# After outlier removal\n#boxplot(median_spend$Food)\n\n\n\n\nShow code\n# boxplot(median_spend$Recreation)\n# left skewed distribution\nquartiles <-quantile(median_spend$Recreation, probs=c(.25,.75))\nIQR<-IQR(median_spend$Recreation)\n\nlower <-quartiles[1]-1.5*IQR\nupper <-quartiles[2]+1.5*IQR\n\nmedian_spend<-median_spend %>% \n  filter((Recreation>=lower) & (Recreation <=upper))\n# After outlier removal\n# boxplot(median_spend$Recreation)\n\n\n\n\nShow code\n# boxplot(median_spend$Rent)\n# left skewed distribution\nquartiles <-quantile(median_spend$Rent, probs=c(.25,.75))\nIQR<-IQR(median_spend$Rent)\n\nlower <-quartiles[1]-1.5*IQR\nupper <-quartiles[2]+1.5*IQR\n\nmedian_spend<-median_spend %>% \n  filter((Rent>=lower) & (Rent <=upper))\n# After outlier removal\n# boxplot(median_spend$Rent)\n\n\n\n\nShow code\n# boxplot(median_spend$Wage)\n# left skewed distribution\nquartiles <-quantile(median_spend$Wage, probs=c(.25,.75))\nIQR<-IQR(median_spend$Wage)\n\nlower <-quartiles[1]-1.5*IQR\nupper <-quartiles[2]+1.5*IQR\n\nmedian_spend<-median_spend %>% \n  filter((Wage>=lower) & (Wage <=upper))\n# After outlier removal\n# boxplot(median_spend$Wage)\n\n\n\n\nShow code\n# boxplot(median_spend$Monthly_spend)\n# left skewed distribution\nquartiles <-quantile(median_spend$Monthly_spend, probs=c(.25,.75))\nIQR<-IQR(median_spend$Monthly_spend)\n\nlower <-quartiles[1]-1.5*IQR\nupper <-quartiles[2]+1.5*IQR\n\nmedian_spend<-median_spend %>% \n  filter((Monthly_spend>=lower) & (Monthly_spend <=upper))\n# After outlier removal\n# boxplot(median_spend$Monthly_spend)\n\n\n\n\nJoin tables\nIn order to understand whether different demographics have difference in spending pattern or financial health, the two tables need to be combined using participantId as key.\n\n\nShow code\ncombined<-merge(demo_info, median_spend, by =\"participantId\")\n\nsummary(combined)\n\n\n participantId householdSize    haveKids            age       \n 1      :  1   Min.   :1.000   Mode :logical   Min.   :18.00  \n 2      :  1   1st Qu.:1.000   FALSE:598       1st Qu.:29.00  \n 3      :  1   Median :2.000   TRUE :220       Median :39.00  \n 5      :  1   Mean   :1.873                   Mean   :39.24  \n 6      :  1   3rd Qu.:3.000                   3rd Qu.:50.00  \n 7      :  1   Max.   :3.000                   Max.   :60.00  \n (Other):812                                                  \n             educationLevel interestGroup   joviality             Food      \n Low                : 55    J      : 93   Min.   :0.000204   Min.   :241.3  \n HighSchoolOrCollege:421    F      : 90   1st Qu.:0.228201   1st Qu.:288.7  \n Bachelors          :210    G      : 87   Median :0.457937   Median :309.3  \n Graduate           :132    H      : 85   Mean   :0.476588   Mean   :354.4  \n                            D      : 83   3rd Qu.:0.715063   3rd Qu.:427.1  \n                            A      : 80   Max.   :0.999234   Max.   :582.2  \n                            (Other):300                                     \n   Recreation         Wage           Rent        Monthly_spend   \n Min.   :  0.0   Min.   :1760   Min.   : 231.7   Min.   : 500.5  \n 1st Qu.:277.8   1st Qu.:2469   1st Qu.: 433.4   1st Qu.:1135.8  \n Median :382.6   Median :3398   Median : 660.2   Median :1397.5  \n Mean   :361.3   Mean   :3663   Mean   : 634.1   Mean   :1360.9  \n 3rd Qu.:472.2   3rd Qu.:4554   3rd Qu.: 784.1   3rd Qu.:1580.5  \n Max.   :800.9   Max.   :8013   Max.   :1301.6   Max.   :2300.0"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#demographics-of-town",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#demographics-of-town",
    "title": "Take-home Exercise 1",
    "section": "Demographics of town",
    "text": "Demographics of town\n\nDistribution of Children status and education level and their relationship\nAround 30% of the town population have children and household size is relatively small ranging from 1 person to 3 people. Around 50% of the population has graduated from high school or college and only 8% have low education level.\n\n\nShow code\n# Distribution of Children Status\n# Distribution of Children Status\nd1<-demo_info %>% \n  count(haveKids=factor(haveKids)) %>% \n  mutate(pct=prop.table(n)) %>% \n  ggplot(aes(x = haveKids, y=n)) +\n  geom_col()+\n  geom_text(aes(x=haveKids, y= n,\n                label=paste0(n,\"\\n(\", round(pct*100,1),\"%)\"),\n                vjust=-0.5))+\n  ggtitle(\"Distribution of Children Status\")+\n  theme_minimal()+\n  xlab(\"Children Status\")+\n  ylab(\"Count\")+\n  ylim(c(0,850))\n\n# Distribution of Education levels\nd2<-demo_info %>% \n  count(educationLevel) %>% \n  mutate(pct=prop.table(n)) %>%\n  arrange(factor(educationLevel)) %>% \n  ggplot(aes(x = reorder(educationLevel, -n), y=n)) +\n  geom_col()+\n  geom_text(aes(x=educationLevel, y= n,\n                label=paste0(n,\"\\n(\", round(pct*100,1),\"%)\"),\n                vjust=-0.5))+\n  ggtitle(\"Distribution of Education Levels\")+\n  theme_minimal()+\n  xlab(\"Education Levels\")+\n  ylab(\"Count\")+\n  ylim(c(0,600))+\n  theme(axis.text.x = element_text(angle=10))\n\nd1 + d2\n\n\n\n\n\nThe following hypotheses were formulated to test the hypothesis that there is a relationship between education level and children status: H0: There is no association between education level and children status H1: There is an association between education level and children status We selected a confidence level of 95% and used chi-squared test for confirmatory analysis since education level and children status are categorical data and the observations are independent of one another. Since p value < 0.05, we can conclude that there is an association between children status and educational level. The group with lower education level is more likely to have children than bachelor and graduate group.\n\n\nShow code\n# Chi squared test for relationship between Children Status and Education Level\nd12<-ggbarstats(demo_info,\n               x=haveKids,\n               y=educationLevel,\n               label=\"both\"\n               )+\n  ggtitle(\"Significant Test of Association between Children Status and Education Level\") +\n  xlab(\"Education Levels\")\nd12"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#financial-health",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#financial-health",
    "title": "Take-home Exercise 1",
    "section": "Financial Health",
    "text": "Financial Health\n\nWage and Education Levels\nWe observed right skewed distribution of monthly wage in low, high school college and bachelor education groups while there is a relatively symmetrical distribution of monthly wage in graduate group. We also can see that there seems to be difference in the wage among all education groups.\n\n\nShow code\nggplot(combined,\n       aes(x = Wage, \n           y = educationLevel, \n           fill = factor(after_stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()+\n  ggtitle(\"Distribution of Wage across different Education Levels\")+\n  theme_minimal()+\n  ylab(\"Education Levels\")+\n  xlab(\"Monthly Wage\")\n\n\n\n\n\nSince the distribution of Wage does not follow normal distribution, we use Kruskal Wallis test to compare the mean monthly wage across different groups. Since p values are <0.5 for all groups as well as all pairwise comparisons, we can conclude that graduate education has the highest mean monthly wage followed by bachelor, high school or college and low education.\n\n\nShow code\nggbetweenstats(\n  data = combined,\n  x = educationLevel, \n  y = Wage,\n  type = \"np\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n) + \n  ggtitle(\"Compare mean Wage among Education Levels\")+\n  xlab(\"Education Levels\")\n\n\n\n\n\n\n\nWage and interest Group\nWe can also observe some differences in the mean wages among interest groups D, E, F (order: E<F<D) and between group D and B (D>B) and group D and A (D>A)\n\n\nShow code\nggbetweenstats(\n  data = combined,\n  x = interestGroup, \n  y = Wage,\n  type = \"np\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE,\n  package='pals',\n  palette=\"polychrome\"\n) + \n  ggtitle(\"Compare mean Wage among Interest Groups\")+\n  xlab(\"Interest Groups\")\n\n\n\n\n\n\n\nCost of living versus wage\nTo evaluate the cost of living and wage, intermediate calculation of the percentage of wage spent on all expenses categories (rent, food, recreation and education) was performed. In addition, since rent generally is the biggest expense, the percentage of wage spent on rent is also calculated and studied separately. People with lower wage spend a higher proportion of their wage on expenses.\n\n\nShow code\ncombined<-combined %>% \n  mutate(exp_pct=Monthly_spend/Wage*100) %>% \n  mutate(food_pct=Food/Wage*100) %>% \n  mutate(rent_pct=Rent/Wage*100) %>% \n  mutate(recreation_pct=Recreation/Wage*100)\n\n\nt test was performed to check the relationship between expense and wage. The Pearson correlation coefficient is -0.78 and p value <0.05, showing moderate negative correlation between expense as a percentage of wage and wage. This means that people with lower wage are more likely to spend a higher proportion of their wage.\n\n\nShow code\np <- ggscatterstats(\n  combined,\n  x = Wage,\n  y = exp_pct,\n  marginal=FALSE\n)+\n  ggtitle(\"Expense as a percentage of Wage versus Wage\")+\n  ylab(\"Expenses as percentage of Wage\")\np\n\n\n\n\n\n\n\nTrend in cost of living and wage\nWrangle data to get the demographic data combined with transaction by month\n\n\nShow code\ntrend<-transactions_amt %>% \n  group_by(month) %>% \n  summarise(Food=median(Food),\n            Rent=median(Rent),\n            Recreation=median(Recreation),\n            Wage=median(Wage),\n            Monthly_spend=median(Monthly_spend), \n            count=n())\n# head(trend)\n\n\nRemove March record because of abnormally high transaction counts and convert table to long form for plotting.\n\n\nShow code\n# Remove Mar 2022 record\ntrend<-trend[-1,]\n# Convert table to long form\ntrend<-trend %>% \n  gather(\"id\", \"value\", 2:6)\n# convert month to date data type for plotting\ntrend$month<-as.Date(trend$month)\n# head(trend)\n\n\nWe can see from the plotting of the different transaction categories over time that the median expenses on food and recreation and Wage are trending down while rent is stable.\n\nFoodRentRecreationWage\n\n\n\n\nShow code\ntrend %>% \n  filter(id=='Food')%>% \n  ggplot(aes(x = month , y = value )) +\n  geom_point()+\n  geom_line()+\n  scale_color_viridis_d()+ \n  theme_minimal()+\n  ggtitle(\"Trend of Median expenses on Food over time\")+\n  ylab(\"Amount in $\")+\n  xlab(\"Month\")+\n  scale_x_date(date_breaks=\"2 month\", date_labels=\"%m-%Y\")\n\n\n\n\n\n\n\n\n\nShow code\ntrend %>% \n  filter(id %in% c('Rent')) %>% \n  ggplot(aes(x = month , y = value)) +\n  geom_point()+\n  geom_line()+ \n  theme_minimal()+\n  ggtitle(\"Trend of Median expenses on Rent over time\")+\n  ylab(\"Amount in $\")+\n  xlab(\"Month\")+\n  scale_x_date(date_breaks=\"2 month\", date_labels=\"%m-%Y\")+\n  theme(legend.position=\"none\")\n\n\n\n\n\n\n\n\n\nShow code\ntrend %>% \n  filter(id ==c('Recreation'))%>% \n  ggplot(aes(x = month , y = value)) +\n  geom_point()+\n  geom_line()+\n  scale_color_viridis_d()+ \n  theme_minimal()+\n  ggtitle(\"Trend of Median expenses on Recreation over time\")+\n  ylab(\"Amount in $\")+\n  xlab(\"Month\")+\n  scale_x_date(date_breaks=\"2 month\", date_labels=\"%m-%Y\")\n\n\n\n\n\n\n\n\n\nShow code\ntrend %>% \n  filter(id %in% c('Wage')) %>% \n  ggplot(aes(x = month , y = value)) +\n  geom_point()+\n  geom_line()+\n  theme_minimal()+\n  ggtitle(\"Trend of Median expenses on Wage over time\")+\n  ylab(\"Amount in $\")+\n  xlab(\"Month\")+\n  scale_x_date(date_breaks=\"2 month\", date_labels=\"%m-%Y\")+\n  theme(legend.position=\"none\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#joviality",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#joviality",
    "title": "Take-home Exercise 1",
    "section": "Joviality",
    "text": "Joviality\n\nJoviality and education levels\nWe observed bimodal distribution of joviality in group with low or bachelor education with a higher percentage and a trimodal distribution in high school or college and graduate education.\n\n\nShow code\nggplot(demo_info,\n       aes(x = joviality, \n           y = educationLevel, \n           fill = factor(after_stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()+\n  ggtitle(\"Distribution of Joviality across different Education Levels\")+\n  theme_minimal()+\n  ylab(\"Education Levels\")+\n  xlab(\"Joviality\")+\n  geom_vline(aes(xintercept=0.5),\n             color=\"grey30\",\n             linetype=\"dashed\", \n             linewidth=1)\n\n\n\n\n\nSince the joviality of all education level groups is not normally distributed, Kruskall Wallis test was performed to test the hypotheses. We chose a confidence level of 95%. We conclude that there is no difference in joviality among education groups\n\n\nShow code\nggbetweenstats(\n  data = demo_info,\n  x = educationLevel, \n  y = joviality,\n  type = \"np\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)+\n  ggtitle(\"Compare mean Joviality across different Education Levels\")+\n  ylab(\"Education Levels\")+\n  xlab(\"Joviality\")\n\n\n\n\n\n\n\nJoviality vs expenses and wage\nJoviality is positively correlated with higher percentage of wage spent on expenses but negatively correlated with wage.\n\n\nShow code\nj1<-ggscatterstats(\n  data = combined,\n  x = exp_pct,\n  y = joviality,\n  marginal = FALSE,\n  )+  \n  ggtitle(\"Expense as % of Wage vs Joviality\")+\n  xlab(\"Expenses as percentage of Wage\")+\n  ylab(\"Joviality\")\n  \nj2<- ggscatterstats(\n  data = combined,\n  x = Wage,\n  y = joviality,\n  marginal = FALSE,\n  )+\n  ggtitle(\"Wage vs Joviality\")+\n  xlab(\"Wage\")+\n  ylab(\"Joviality\")\n\nj1 + j2\n\n\n\n\n\nJoviality is also positively correlated to recreation, food and rent expense. In addition, people who spend more of their wage on one expense category tend to spend more on other categories as well.\n\n\nShow code\ncombined %>% \n  select(joviality, recreation_pct, food_pct, rent_pct) %>% \n  ggcorrmat(colors   = c(\"#B2182B\", \"white\", \"#4D4D4D\"),\n  matrix.type  = \"lower\"\n)"
  }
]