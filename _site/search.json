[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This website is my portfolio to showcase the different exercises that I have done to practice visualization skills and techniques.\nHands-on Exercises are pre-class preparation for our lectures.\nIn-Class Exercises are done during lectures to demonstrate important concepts taught by Prof. Kam Tin Seong.\nTake-home Exercises are mini projects that allow me to apply the skills I have learnt."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages have been installed. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\n\nexam_data <-read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a simple bar chart",
    "text": "Plotting a simple bar chart\n\nggplot(data=exam_data,\n       aes(y=forcats::fct_infreq(RACE)))+\n  geom_bar()+\n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"lightblue\", linetype=0))+\n  labs(y=\"Race\",\n       x=\"Count\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#sorted-bar-charts-with-frequencies-and-percentages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#sorted-bar-charts-with-frequencies-and-percentages",
    "title": "Hands-on Exercise 1",
    "section": "Sorted bar charts with frequencies and percentages",
    "text": "Sorted bar charts with frequencies and percentages\n\nggplot(data=exam_data,\n       aes(x=forcats::fct_infreq(RACE)))+\n  geom_bar()+\n  ylim(0,220)+\n  labs(x=\"Race\",\n       y=\"No. of\\nPupils\")+\n  theme(axis.title.y=element_text(angle=0))+\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100, 1), \"%\")),\n      vjust=-1)\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-mean-and-median-lines-on-histogram-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-mean-and-median-lines-on-histogram-plot",
    "title": "Hands-on Exercise 1",
    "section": "Adding mean and median lines on histogram plot",
    "text": "Adding mean and median lines on histogram plot\n\nggplot(data=exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins=20, \n                 color='black', \n                 fill='lightblue')+\n    labs(y=\"Count\",\n       x=\"Maths\")+\n    geom_vline(aes(xintercept=mean(MATHS, na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=1)+\n    geom_vline(aes(xintercept=median(MATHS, na.rm=T)),\n             color=\"grey30\",\n             linetype=\"dashed\", \n             size=1)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#background-histogram-for-added-context",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#background-histogram-for-added-context",
    "title": "Hands-on Exercise 1",
    "section": "Background histogram for added context",
    "text": "Background histogram for added context\n\nggplot(data=exam_data,\n       aes(x=ENGLISH, fill=GENDER))+\n  geom_histogram(data=exam_data[,-3], fill='grey', alpha=0.5)+\n  geom_histogram(colour='black')+\n  facet_wrap(~GENDER)+\n  guides(fill=\"none\")+\n  theme_bw()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#relationship-between-english-and-maths-scores",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#relationship-between-english-and-maths-scores",
    "title": "Hands-on Exercise 1",
    "section": "Relationship between English and Maths scores",
    "text": "Relationship between English and Maths scores\n\nggplot(data=exam_data,\n       aes(x=MATHS, y=ENGLISH))+\n  geom_point()+\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))+\n  geom_vline(aes(xintercept=50),\n             color=\"grey60\", \n             linetype=\"dashed\", \n             size=1)+\n  geom_hline(yintercept=50,\n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\n\n\nFirst, create an interactive ggplot object with geom_dotplot_interactive()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\n\n\n\n\nNext, use girafe() to create an interactive svg object: student’s ID displayed when mouse pointer hover on a data point of interest\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\nInclude a list object in the content of the tooltip.\n\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\ntooltip_css <- \"background-color:white; #<<\nfont-style:bold; color:black;\" #<<\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #<<\n    opts_tooltip(    #<<\n      css = tooltip_css)) #<<\n)                                        \n\n\n\n\n\n\n\n\n\ntooltip <- function(y, ymax, accuracy = .01) {\n  mean <- scales::number(y, accuracy = accuracy)\n  sem <- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point <- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\nDefault value hover_css=“fill:orange;”\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\n\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n\n\n\n\np1 <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 <- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\nHighlight_key() of plotly package is used as shared data. Two scatterplots will be created by using ggplot2 functions. Lastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\nd <- highlight_key(exam_data)\np1 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\n\n\n\n\n\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\n\n\nd <- highlight_key(exam_data) \np <- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg <- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\nSetting the `off` event (i.e., 'plotly_deselect') to match the `on` event (i.e., 'plotly_selected'). You can change this default via the `highlight()` function."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#getting-started-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#getting-started-1",
    "title": "Hands-on Exercise 3",
    "section": "Getting Started",
    "text": "Getting Started\n\nInstall and load R packages\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\n\nImport data\n\ncol <- c(\"Country\", \"Continent\")\nglobalPop <- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %>%\n  mutate_each_(funs(factor(.)), col) %>%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#gganimate-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#gganimate-method",
    "title": "Hands-on Exercise 3",
    "section": "gganimate method",
    "text": "gganimate method\n\nBuild a static population bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\nBuild the animated bubble plot\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year). ease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-method",
    "title": "Hands-on Exercise 3",
    "section": "plotly method",
    "text": "plotly method\n\nBuild animated bubble plot with ggplotly()\n\ngg <- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\nBuild animated buble plot with plot_ly()\n\nbp <- globalPop %>%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent, \n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          )\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "pacman::p_load(ggstatsplot, tidyverse)\n\n\n\n\n\nexam <- read_csv(\"data/Exam_data.csv\")\n\n\n\n\nA Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\nTwo-sample mean test of Maths scores by gender.\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n“ns” → only non-significant “s” → only significant “all” → everything\n\n\n\nOne-way ANOVA test on English score by race.\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\nSignificant Test of Correlation between Maths scores and English scores.\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\nMaths scores is binned into a 4-class variable by using cut().\n\nexam1 <- exam %>% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nSignificant Test of Association between Maths score and gender.\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)\n\n\n\n\n\n\n\n\nToyota Corolla case study will be used. The purpose of study is to build a model to discover factors affecting prices of used-cars by taking into consideration a set of explanatory variables.\n\n\n\npacman::p_load(readxl, performance, parameters, see)\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   <dbl> <chr>    <dbl>     <dbl>     <dbl>    <dbl>  <dbl>         <dbl>  <dbl>\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period <dbl>, HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>, …\n\n\n\n\n\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\n\nUse check_collinearity() of performance package\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\n\nUse check_normality() of performance package\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n <- check_normality(model1)\n\nplot(check_n)\n\n\n\n\n\n\n\nUse check_heteroscedasticity() of performance package\n\ncheck_h <- check_heteroscedasticity(model1)\n\nplot(check_h)\n\n\n\n\n\n\n\nUse check_model().\n\ncheck_model(model1)\n\n\n\n\n\n\n\nplot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.\n\nplot(parameters(model1))\n\n\n\n\n\n\n\nUse ggcoefstats() of ggstatsplot package to visualise the parameters of a regression model\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-uncertainty-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-uncertainty-of-point-estimates",
    "title": "Hands-on_Ex04",
    "section": "Visualizing Uncertainty of Point Estimates",
    "text": "Visualizing Uncertainty of Point Estimates\n\npacman::p_load(tidyverse, plotly, crosstalk, DT, ggdist, gganimate)\nexam <- read_csv(\"data/Exam_data.csv\")\n\n\nVisualizing uncertainty of point estimates: ggplot2 methods\n\nmy_sum <- exam %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n \n  \n    RACE \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    Chinese \n    193 \n    76.50777 \n    15.69040 \n    1.132357 \n  \n  \n    Indian \n    12 \n    60.66667 \n    23.35237 \n    7.041005 \n  \n  \n    Malay \n    108 \n    57.44444 \n    21.13478 \n    2.043177 \n  \n  \n    Others \n    9 \n    69.66667 \n    10.72381 \n    3.791438 \n  \n\n\n\n\n\nPlot the standard error of mean maths score by race.\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE,-mean), \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x=\"Race\") +\n  ggtitle(\"Standard error of mean \n          maths score by race\")\n\n\n\n\nPlot the 95% confidence interval of mean maths score by race.\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE,-mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x=\"Race\") +\n  ggtitle(\"95% confidence interval of mean \n          maths score by race\")+\n  theme_minimal()\n\n\n\n\nPlot interactive error bars for the 99% confidence interval of mean maths score by race.\n\nd <- highlight_key(my_sum) \np <- ggplot(d) +\n  geom_errorbar(\n    aes(x=reorder(RACE,-mean), \n        ymin=mean-2.58*se, \n        ymax=mean+2.58*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean,\n            text=paste(\"Race:\", RACE,\n                     \"<br>N:\", n,\n                     \"<br>Avg. Scores:\", round(mean, digits = 2),\n                     \"<br>99% CI:[\", round(mean - 2.58*se, digits = 2), \", \", round(mean + 2.58*se, digits = 2), \"]\")), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x=\"Race\") +\n  ggtitle(\"99% confidence interval of mean \n          maths score by race\")+\n  theme_minimal()\n\ngg <- highlight(ggplotly(p, tooltip=\"text\"),        \n                \"plotly_selected\")\n\ndt <- DT::datatable(d,\n                    colnames = c(\"\",\"No. of pupils\", \"Avg Scores\", \"Std Dev\", \"Std Error\")) |> \n  formatRound(columns = c(\"mean\", \"sd\", \"se\"), digits = 2)\n\ncrosstalk::bscols(gg,               \n                  dt, \n                  widths = 5)  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualising Uncertainty: ggdist package\nstat_pointinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +   #<<\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\nShowing 95% and 99% confidence interval with mean\n\nexam %>% \n  ggplot(aes(x = RACE,\n             y = MATHS)) +\n  \n  #refer to point_interval argument in stat_pointinterval() help\n  stat_pointinterval(\n    .point = mean,\n    .interval = c(qi(0.05), qi(0.01))    \n  ) +\n  \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\"\n  )\n\n\n\n\nstat_gradientinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "title": "Hands-on_Ex04",
    "section": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\n#devtools::install_github(\"wilkelab/ungeviz\", force = TRUE)\nlibrary(ungeviz)\n\n\nggplot(data = exam, \n       (aes(x = factor(RACE), y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = RACE), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3)+\n  xlab(\"Race\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#getting-started-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#getting-started-1",
    "title": "Hands-on_Ex04",
    "section": "Getting started",
    "text": "Getting started\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)\n\n\ncovid19 <- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %>%\n  mutate_if(is.character, as.factor)\n\ncovid19\n\n# A tibble: 267 × 7\n   `Sub-district ID` City       District `Sub-district` Positive Recovered Death\n               <dbl> <fct>      <fct>    <fct>             <dbl>     <dbl> <dbl>\n 1        3172051003 JAKARTA U… PADEMAN… ANCOL              1776      1691    26\n 2        3173041007 JAKARTA B… TAMBORA  ANGKE              1783      1720    29\n 3        3175041005 JAKARTA T… KRAMAT … BALE KAMBANG       2049      1964    31\n 4        3175031003 JAKARTA T… JATINEG… BALI MESTER         827       797    13\n 5        3175101006 JAKARTA T… CIPAYUNG BAMBU APUS         2866      2792    27\n 6        3174031002 JAKARTA S… MAMPANG… BANGKA             1828      1757    26\n 7        3175051002 JAKARTA T… PASAR R… BARU               2541      2433    37\n 8        3175041004 JAKARTA T… KRAMAT … BATU AMPAR         3608      3445    68\n 9        3171071002 JAKARTA P… TANAH A… BENDUNGAN HIL…     2012      1937    38\n10        3175031002 JAKARTA T… JATINEG… BIDARA CINA        2900      2773    52\n# ℹ 257 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods",
    "title": "Hands-on_Ex04",
    "section": "FunnelPlotR methods",
    "text": "FunnelPlotR methods\nFunnelPlotR package requires a numerator (events of interest), denominator (population to be considered) and group:\nlimit: plot limits (95 or 99). label_outliers: label outliers (true or false). Poisson_limits: add Poisson limits to the plot. OD_adjust: add overdispersed limits to the plot. xrange and yrange: specify the range to display for axes\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #<<           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #<<\n  y_label = \"Cumulative Fatality Rate\"  #<<\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "title": "Hands-on_Ex04",
    "section": "Funnel Plot for Fair Visual Comparison: ggplot2 methods",
    "text": "Funnel Plot for Fair Visual Comparison: ggplot2 methods\nDerive cumulative death rate and standard error of cumulative death rate.\n\ndf <- covid19 %>%\n  mutate(rate = Death / Positive) %>%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %>%\n  filter(rate > 0)\n\nCompute fit.mean\n\nfit.mean <- weighted.mean(df$rate, 1/df$rate.se^2)\n\nCalculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq <- seq(1, max(df$Positive), 1)\nnumber.ll95 <- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 <- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 <- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 <- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI <- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\n\nPlot a static funnel plot\n\np <- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\n\n\nPlot Interactive funnel plot\nUse ggplotly() of plotly r package.\n\nfp_ggplotly <- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "Code chunk below will be used to check if these packages have been installed and also will load them onto your working R environment.\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)\n\n\n\n\n\n\nexam_data <-read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#anotation",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#anotation",
    "title": "Hands-on Exercise 2",
    "section": "Anotation",
    "text": "Anotation\n\nAnotation with ggrepel\nReplace geom_text() by geom_text_repel() and geom_label() by geom_label_repel.\n\nggplot(data=exam_data,\n       aes(y=ENGLISH,x=MATHS))+\n  geom_point()+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")+\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))+\n  geom_smooth(method=lm, \n              size=0.5)+\n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#theme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#theme",
    "title": "Hands-on Exercise 2",
    "section": "Theme",
    "text": "Theme\n\nWorking with ggtheme package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\nWorking with hrbthems package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#composite-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#composite-graphs",
    "title": "Hands-on Exercise 2",
    "section": "Composite graphs",
    "text": "Composite graphs\n\nPathwork methods\n\nCreating a composite figure with tag\n\np1 <- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n#“|” operator to stack two ggplot2 graphs\n#“/” operator to place the plots beside each other\n#“()” operator the define the sequence of the plotting\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\nCreating figure with insert\n\np12 <- p1|p2\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\nCreating a composite figure by using patchwork and ggtheme\n\npatchwork <- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "pacman::p_load(ggstatsplot, rstatix, gt, patchwork, tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#one-sample-test",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#one-sample-test",
    "title": "In-class Exercise 4",
    "section": "One sample test",
    "text": "One sample test\n\nset.seed(1234)\n\ngghistostats(\n  data = exam_data,\n  x = ENGLISH,\n  type = \"p\",\n  test.value = 60,\n  xlab = \"English scores\"\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#two-sample-test",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#two-sample-test",
    "title": "In-class Exercise 4",
    "section": "Two sample test",
    "text": "Two sample test\n\nggbetweenstats(\n  data = exam_data,\n  x = GENDER, \n  y = MATHS,\n  type = \"p\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In class Exercise 5",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\npackage 'igraph' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\User\\AppData\\Local\\Temp\\RtmpmkSHaR\\downloaded_packages\npackage 'tidygraph' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\User\\AppData\\Local\\Temp\\RtmpmkSHaR\\downloaded_packages\npackage 'polyclip' successfully unpacked and MD5 sums checked\npackage 'ggforce' successfully unpacked and MD5 sums checked\npackage 'graphlayouts' successfully unpacked and MD5 sums checked\npackage 'ggraph' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\User\\AppData\\Local\\Temp\\RtmpmkSHaR\\downloaded_packages\npackage 'visNetwork' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\User\\AppData\\Local\\Temp\\RtmpmkSHaR\\downloaded_packages\npackage 'tzdb' successfully unpacked and MD5 sums checked\npackage 'cpp11' successfully unpacked and MD5 sums checked\npackage 'clock' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\User\\AppData\\Local\\Temp\\RtmpmkSHaR\\downloaded_packages\n\n\n\n\n\n\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\n\n\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\n\n\nData type SentDate should be converted to date. Get information of the day in the week that emails are sent by using wday()\n\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 10\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    <date> 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     <ord> Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…\n\n\n\n\n\nFilter work related subjects Exclude emails sent to self Count the numbers of emails as weight\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%\n  filter(Weight > 1) %>%\n  ungroup()\n\nglimpse(GAStech_edges_aggregated)\n\nRows: 1,372\nColumns: 4\n$ source  <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  <dbl> 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday <ord> Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  <int> 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…\n\n\n\n\n\n\n\n\nGraph is directed from source to target\n\n\nCreate a graph object\n\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 54 × 4\n     id label               Department     Title                                \n  <dbl> <chr>               <chr>          <chr>                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# ℹ 48 more rows\n#\n# A tibble: 1,372 × 4\n   from    to Weekday Weight\n  <int> <int> <ord>    <int>\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows\n\n\n\n\n\nData Preparation\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %>%\n  rename(from = id) %>%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %>%\n  rename(to = id) %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(from, to) %>%\n    summarise(weight = n()) %>%\n  filter(from!=to) %>%\n  filter(weight > 1) %>%\n  ungroup()\n\nForce directed graph: with forces pushing nodes apart and links pulling connected nodes together\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#load-packages",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#load-packages",
    "title": "In class Exercise 5",
    "section": "Load packages",
    "text": "Load packages\n\npacman::p_load(jsonlite,tidygraph,ggraph,visNetwork,tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#import-json-file",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#import-json-file",
    "title": "In class Exercise 5",
    "section": "Import Json file",
    "text": "Import Json file\n\nMC1<-fromJSON(\"data/MC1.json\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#extract-node-information",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#extract-node-information",
    "title": "In class Exercise 5",
    "section": "Extract node information",
    "text": "Extract node information\n\nMC1_nodes <- as_tibble(MC1$nodes) %>% \n  select(id,type,country)\n\nglimpse(MC1_nodes)\n\nRows: 3,428\nColumns: 3\n$ id      <chr> \"Spanish Shrimp  Carriers\", \"12744\", \"143129355\", \"7775\", \"101…\n$ type    <chr> \"company\", \"organization\", \"organization\", \"organization\", \"or…\n$ country <chr> \"Nalakond\", NA, NA, NA, NA, NA, NA, \"Rio Isla\", NA, NA, NA, NA…"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#extract-edge-information",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#extract-edge-information",
    "title": "In class Exercise 5",
    "section": "Extract edge information",
    "text": "Extract edge information\n\nMC1_edges <-as_tibble(MC1$links) %>% \n  select(source, target, type, weight, key)\n\nglimpse(MC1_edges)\n\nRows: 11,069\nColumns: 5\n$ source <chr> \"Spanish Shrimp  Carriers\", \"Spanish Shrimp  Carriers\", \"Spanis…\n$ target <chr> \"12744\", \"21323516\", \"290834957\", \"3506021\", \"Conventionâ\", \"22…\n$ type   <chr> \"ownership\", \"partnership\", \"partnership\", \"ownership\", \"family…\n$ weight <dbl> 0.9001396, 0.8458973, 0.9648761, 0.9642126, 0.8234858, 0.893152…\n$ key    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "A sample survey of representative residents of City of Engagement located at Country of Nowhere was conducted to collect data related to demographic and spending patterns. This data will be used to assist in community revitalization efforts, including how to allocate city renewal grant.\nThe objective is to use appropriate static and interactive statistical graphics methods to provide an user-friendly and interactive solution that helps city managers and planners to explore the complex data in an engaging way and reveal hidden patterns."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-and-load-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-and-load-packages",
    "title": "Take-home Exercise 1",
    "section": "Install and load packages",
    "text": "Install and load packages\n\n\nShow code\npacman::p_load(plotly, ggstatsplot, knitr, patchwork, ggdist, ggthemes,ggridges, tidyverse, pals, viridis, gganimate, reshape2, lubridate, zoo, transformr, ggiraph)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-and-view-datasets",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-and-view-datasets",
    "title": "Take-home Exercise 1",
    "section": "Import and view datasets",
    "text": "Import and view datasets\nLoad demographic data and data summary statistics\n\n\nShow code\ndemo_info<-read_csv(\"data/Participants.csv\")\nsummary(demo_info)\n\n\n participantId    householdSize    haveKids            age       \n Min.   :   0.0   Min.   :1.000   Mode :logical   Min.   :18.00  \n 1st Qu.: 252.5   1st Qu.:1.000   FALSE:710       1st Qu.:29.00  \n Median : 505.0   Median :2.000   TRUE :301       Median :39.00  \n Mean   : 505.0   Mean   :1.964                   Mean   :39.07  \n 3rd Qu.: 757.5   3rd Qu.:3.000                   3rd Qu.:50.00  \n Max.   :1010.0   Max.   :3.000                   Max.   :60.00  \n educationLevel     interestGroup        joviality       \n Length:1011        Length:1011        Min.   :0.000204  \n Class :character   Class :character   1st Qu.:0.240074  \n Mode  :character   Mode  :character   Median :0.477539  \n                                       Mean   :0.493794  \n                                       3rd Qu.:0.746819  \n                                       Max.   :0.999234  \n\n\nView all columns and data type for each column\n\n\nShow code\nglimpse(demo_info)\n\n\nRows: 1,011\nColumns: 7\n$ participantId  <dbl> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n$ householdSize  <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ haveKids       <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, T…\n$ age            <dbl> 36, 25, 35, 21, 43, 32, 26, 27, 20, 35, 48, 27, 34, 18,…\n$ educationLevel <chr> \"HighSchoolOrCollege\", \"HighSchoolOrCollege\", \"HighScho…\n$ interestGroup  <chr> \"H\", \"B\", \"A\", \"I\", \"H\", \"D\", \"I\", \"A\", \"G\", \"D\", \"D\", …\n$ joviality      <dbl> 0.001626703, 0.328086500, 0.393469590, 0.138063446, 0.8…\n\n\nis.na() function is also used to confirm that there are no missing values in the demo_info dataset.\n\n\nShow code\n#Check for mising values\nany(is.na(demo_info))\n\n\n[1] FALSE\n\n\n\n\nShow code\n# check unique values and their frequency for each column\ndemo_info\n\n\n# A tibble: 1,011 × 7\n   participantId householdSize haveKids   age educationLevel      interestGroup\n           <dbl>         <dbl> <lgl>    <dbl> <chr>               <chr>        \n 1             0             3 TRUE        36 HighSchoolOrCollege H            \n 2             1             3 TRUE        25 HighSchoolOrCollege B            \n 3             2             3 TRUE        35 HighSchoolOrCollege A            \n 4             3             3 TRUE        21 HighSchoolOrCollege I            \n 5             4             3 TRUE        43 Bachelors           H            \n 6             5             3 TRUE        32 HighSchoolOrCollege D            \n 7             6             3 TRUE        26 HighSchoolOrCollege I            \n 8             7             3 TRUE        27 Bachelors           A            \n 9             8             3 TRUE        20 Bachelors           G            \n10             9             3 TRUE        35 Bachelors           D            \n# ℹ 1,001 more rows\n# ℹ 1 more variable: joviality <dbl>\n\n\nLoad financial transaction data and check summary statistics\n\n\nShow code\ntransactions<-read_csv(\"data/FinancialJournal.csv\")\nsummary(transactions)\n\n\n participantId      timestamp                        category        \n Min.   :   0.0   Min.   :2022-03-01 00:00:00.00   Length:1513636    \n 1st Qu.: 222.0   1st Qu.:2022-05-24 13:25:00.00   Class :character  \n Median : 464.0   Median :2022-08-25 15:00:00.00   Mode  :character  \n Mean   : 480.9   Mean   :2022-08-26 05:00:48.42                     \n 3rd Qu.: 726.0   3rd Qu.:2022-11-27 07:25:00.00                     \n Max.   :1010.0   Max.   :2023-02-28 23:55:00.00                     \n     amount         \n Min.   :-1562.726  \n 1st Qu.:   -5.594  \n Median :   -4.000  \n Mean   :   20.047  \n 3rd Qu.:   21.598  \n Max.   : 4096.526  \n\n\nView all columns and data type for each column\n\n\nShow code\nglimpse(transactions)\n\n\nRows: 1,513,636\nColumns: 4\n$ participantId <dbl> 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,…\n$ timestamp     <dttm> 2022-03-01, 2022-03-01, 2022-03-01, 2022-03-01, 2022-03…\n$ category      <chr> \"Wage\", \"Shelter\", \"Education\", \"Wage\", \"Shelter\", \"Educ…\n$ amount        <dbl> 2472.50756, -554.98862, -38.00538, 2046.56221, -554.9886…\n\n\nCheck for missing values\n\n\nShow code\nany(is.na(transactions))\n\n\n[1] FALSE"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-cleaning-and-wrangling",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-cleaning-and-wrangling",
    "title": "Take-home Exercise 1",
    "section": "Data Cleaning and Wrangling",
    "text": "Data Cleaning and Wrangling\nLooking at the data summary, we notice a few problems:\n\nWrong data type\nData type is character for nominal data (participantId), categorical data (interestGroup in demo_info and category in transactions) and ordinal data (educationLevel in demo_info). We need to use as.factor() to convert these attributes to the correct data type. We also need to add order to the educationLevel.\nAlso the data type is wrong for householdSize in demo_info, we used as.integer() to convert householdSize to discrete data.\n\n\nShow code\n# Nominal and Categorical data\ndemo_info$participantId<-as.factor(demo_info$participantId)\ntransactions$participantId<-as.factor(transactions$participantId)\n\ndemo_info$educationLevel<-as.factor(demo_info$educationLevel)\ndemo_info$interestGroup<- as.factor(demo_info$interestGroup)\ntransactions$category<-as.factor(transactions$category)\n\n# Check categories in educationLevel using levels()\n\nlevels(demo_info$educationLevel)\n\n\n[1] \"Bachelors\"           \"Graduate\"            \"HighSchoolOrCollege\"\n[4] \"Low\"                \n\n\nShow code\n# Assign orders to ordinal data educationLevel\n\ndemo_info$educationLevel<-factor((demo_info$educationLevel),\n                                 levels=c(\"Low\",\"HighSchoolOrCollege\",\"Bachelors\", \"Graduate\"))\n\n\n# Discrete data\n\ndemo_info$householdSize<-as.integer(demo_info$householdSize)\n\n\n\n\nDuplicated Data\nDuplicated data is detected by select rows with duplicate data for financial journal. Since at each timestamp there can only be one single transaction of the same category and amount, the duplicate data should be excluded from analysis.\n\n\nShow code\n#check for duplicates; find all rows with the same values for all columns\ntransactions[duplicated(transactions),]\n\n\n# A tibble: 1,113 × 4\n   participantId timestamp           category   amount\n   <fct>         <dttm>              <fct>       <dbl>\n 1 0             2022-03-01 00:00:00 Shelter    -555. \n 2 0             2022-03-01 00:00:00 Education   -38.0\n 3 1             2022-03-01 00:00:00 Shelter    -555. \n 4 1             2022-03-01 00:00:00 Education   -38.0\n 5 2             2022-03-01 00:00:00 Shelter    -557. \n 6 2             2022-03-01 00:00:00 Education   -12.8\n 7 3             2022-03-01 00:00:00 Shelter    -555. \n 8 3             2022-03-01 00:00:00 Education   -38.0\n 9 4             2022-03-01 00:00:00 Shelter   -1556. \n10 4             2022-03-01 00:00:00 Education   -12.8\n# ℹ 1,103 more rows\n\n\nIn total, 1113 rows of duplicate data were hidden and excluded from analysis. distinct() function is used to keep only unique/distinct rows from a data frame. If there are duplicate rows, only the first row is preserved.\n\n\nShow code\n#Remove duplicate rows\ntransactions<-transactions %>% distinct()\n\n# Check that duplicates have been removed\ntransactions[duplicated(transactions),]\n\n\n# A tibble: 0 × 4\n# ℹ 4 variables: participantId <fct>, timestamp <dttm>, category <fct>,\n#   amount <dbl>\n\n\n\n\nConvert negative transactions value to positive\n\n\nShow code\ntransactions$amount <-abs(transactions$amount)\n\n\n\n\nExtract month from timestamp and get monthly expense data\nSince wage and expenses such as shelter are paid monthly and there are only 12 months (3/2022 to 2/2023) in the dataset, only month data is needed from the timestamp column.\n\n\nShow code\n#mutate date\ntransactions <-transactions %>% \n  mutate(month=as.yearmon(timestamp, \"%Y %m\"))\n\nhead(transactions)\n\n\n# A tibble: 6 × 5\n  participantId timestamp           category  amount month    \n  <fct>         <dttm>              <fct>      <dbl> <yearmon>\n1 0             2022-03-01 00:00:00 Wage      2473.  Mar 2022 \n2 0             2022-03-01 00:00:00 Shelter    555.  Mar 2022 \n3 0             2022-03-01 00:00:00 Education   38.0 Mar 2022 \n4 1             2022-03-01 00:00:00 Wage      2047.  Mar 2022 \n5 1             2022-03-01 00:00:00 Shelter    555.  Mar 2022 \n6 1             2022-03-01 00:00:00 Education   38.0 Mar 2022 \n\n\n\n\nShow code\n# Use group by to get monthly expense by participantID, month and category\n\ntransactions<-transactions %>%\n  select(participantId,month,category,amount) %>% \n  group_by(participantId,month,category)%>%\n  summarize(monthly_amt=sum(amount))\n\ntransactions\n\n\n# A tibble: 44,524 × 4\n# Groups:   participantId, month [10,691]\n   participantId month     category   monthly_amt\n   <fct>         <yearmon> <fct>            <dbl>\n 1 0             Mar 2022  Education         38.0\n 2 0             Mar 2022  Food             268. \n 3 0             Mar 2022  Recreation       349. \n 4 0             Mar 2022  Shelter          555. \n 5 0             Mar 2022  Wage           11932. \n 6 0             Apr 2022  Education         38.0\n 7 0             Apr 2022  Food             266. \n 8 0             Apr 2022  Recreation       219. \n 9 0             Apr 2022  Shelter          555. \n10 0             Apr 2022  Wage            8637. \n# ℹ 44,514 more rows\n\n\n\n\nConvert transaction category to columns\n\n\nShow code\n# Put value 0 for missing values, rental adjustment category is not applicable for all participants \ntransactions_amt<-transactions %>% \n  pivot_wider(\n    names_from=category,\n    values_from=monthly_amt,\n    values_fill = 0)\n\ntransactions_amt\n\n\n# A tibble: 10,691 × 8\n# Groups:   participantId, month [10,691]\n   participantId month  Education  Food Recreation Shelter   Wage RentAdjustment\n   <fct>         <year>     <dbl> <dbl>      <dbl>   <dbl>  <dbl>          <dbl>\n 1 0             Mar 2…      38.0  268.      349.     555. 11932.              0\n 2 0             Apr 2…      38.0  266.      219.     555.  8637.              0\n 3 0             May 2…      38.0  265.      383.     555.  9048.              0\n 4 0             Jun 2…      38.0  257.      466.     555.  9048.              0\n 5 0             Jul 2…      38.0  270.     1070.     555.  8637.              0\n 6 0             Aug 2…      38.0  262.      314.     555.  9459.              0\n 7 0             Sep 2…      38.0  256.      295.     555.  9048.              0\n 8 0             Oct 2…      38.0  267.       25.0    555.  8637.              0\n 9 0             Nov 2…      38.0  261.      377.     555.  9048.              0\n10 0             Dec 2…      38.0  266.      357.     555.  9048.              0\n# ℹ 10,681 more rows\n\n\n\n\nGroup Shelter and Rental Adjustment as Rental expense\nThe actual rental expense should take into account the rental adjustment for an accurate presentation. Rental expense is calculated by the following formula: Rental expense=Shelter - RentAdjustment\nWe will also get the total spending from combining all expenses.\n\n\nShow code\ntransactions_amt<-transactions_amt%>% \n  mutate(Rent=Shelter - RentAdjustment) %>% \n  mutate(Monthly_spend=sum(Education, Food, Recreation, Rent))\n\nsummary(transactions_amt)\n\n\n participantId       month        Education          Food      \n 0      :   12   Min.   :2022   Min.   : 0.00   Min.   : 32.0  \n 1      :   12   1st Qu.:2022   1st Qu.: 0.00   1st Qu.:283.4  \n 2      :   12   Median :2023   Median : 0.00   Median :308.6  \n 3      :   12   Mean   :2023   Mean   :13.10   Mean   :346.4  \n 4      :   12   3rd Qu.:2023   3rd Qu.:12.81   3rd Qu.:422.0  \n 5      :   12   Max.   :2023   Max.   :91.14   Max.   :590.4  \n (Other):10619                                                 \n   Recreation        Shelter            Wage       RentAdjustment    \n Min.   :   0.0   Min.   :   0.0   Min.   : 1600   Min.   :   0.000  \n 1st Qu.: 242.0   1st Qu.: 433.4   1st Qu.: 2546   1st Qu.:   0.000  \n Median : 377.4   Median : 652.3   Median : 3614   Median :   0.000  \n Mean   : 387.6   Mean   : 633.8   Mean   : 4265   Mean   :   5.138  \n 3rd Qu.: 514.0   3rd Qu.: 779.2   3rd Qu.: 5171   3rd Qu.:   0.000  \n Max.   :1962.1   Max.   :5829.6   Max.   :21335   Max.   :4809.283  \n                                                                     \n      Rent        Monthly_spend \n Min.   :   0.0   Min.   :  32  \n 1st Qu.: 433.4   1st Qu.:1126  \n Median : 649.7   Median :1392  \n Mean   : 628.7   Mean   :1376  \n 3rd Qu.: 778.3   3rd Qu.:1622  \n Max.   :1556.4   Max.   :3463  \n                                \n\n\n\n\nGet median monthly spending\nSince Education expense is mostly zero in value, we can exclude Education from analysis and only include education as part of total monthly expenses\n\n\nShow code\nmedian_spend<-transactions_amt %>% \n select(participantId, month, Food, Recreation, Rent, Monthly_spend, Wage) %>% \n  group_by(participantId)%>%\n  summarize(Food=median(Food),\n            Recreation=median(Recreation),\n            Wage=median(Wage),\n            Rent=median(Rent),\n            Monthly_spend=median(Monthly_spend))\nsummary(median_spend)\n\n\n participantId       Food         Recreation         Wage      \n 0      :   1   Min.   : 32.0   Min.   :  0.0   Min.   : 1760  \n 1      :   1   1st Qu.:274.4   1st Qu.:158.9   1st Qu.: 2468  \n 2      :   1   Median :301.2   Median :354.1   Median : 3230  \n 3      :   1   Mean   :313.8   Mean   :312.3   Mean   : 3913  \n 4      :   1   3rd Qu.:420.3   3rd Qu.:453.4   3rd Qu.: 4611  \n 5      :   1   Max.   :582.2   Max.   :819.0   Max.   :17600  \n (Other):1005                                                  \n      Rent        Monthly_spend   \n Min.   :   0.0   Min.   :  32.0  \n 1st Qu.: 389.4   1st Qu.: 999.2  \n Median : 603.5   Median :1313.4  \n Mean   : 552.4   Mean   :1191.5  \n 3rd Qu.: 761.2   3rd Qu.:1545.0  \n Max.   :1556.4   Max.   :2539.2  \n                                  \n\n\n\n\nRemove outliers\n\n\nShow code\n# boxplot(median_spend$Food)\n# left skewed distribution\nquartiles <-quantile(median_spend$Food, probs=c(.25,.75))\nIQR<-IQR(median_spend$Food)\n\nlower <-quartiles[1]-1.5*IQR\nupper <-quartiles[2]+1.5*IQR\n\nmedian_spend<-median_spend %>% \n  filter((Food>=lower) & (Food <=upper))\n# After outlier removal\n#boxplot(median_spend$Food)\n\n\n\n\nShow code\n# boxplot(median_spend$Recreation)\n# left skewed distribution\nquartiles <-quantile(median_spend$Recreation, probs=c(.25,.75))\nIQR<-IQR(median_spend$Recreation)\n\nlower <-quartiles[1]-1.5*IQR\nupper <-quartiles[2]+1.5*IQR\n\nmedian_spend<-median_spend %>% \n  filter((Recreation>=lower) & (Recreation <=upper))\n# After outlier removal\n# boxplot(median_spend$Recreation)\n\n\n\n\nShow code\n# boxplot(median_spend$Rent)\n# left skewed distribution\nquartiles <-quantile(median_spend$Rent, probs=c(.25,.75))\nIQR<-IQR(median_spend$Rent)\n\nlower <-quartiles[1]-1.5*IQR\nupper <-quartiles[2]+1.5*IQR\n\nmedian_spend<-median_spend %>% \n  filter((Rent>=lower) & (Rent <=upper))\n# After outlier removal\n# boxplot(median_spend$Rent)\n\n\n\n\nShow code\n# boxplot(median_spend$Wage)\n# left skewed distribution\nquartiles <-quantile(median_spend$Wage, probs=c(.25,.75))\nIQR<-IQR(median_spend$Wage)\n\nlower <-quartiles[1]-1.5*IQR\nupper <-quartiles[2]+1.5*IQR\n\nmedian_spend<-median_spend %>% \n  filter((Wage>=lower) & (Wage <=upper))\n# After outlier removal\n# boxplot(median_spend$Wage)\n\n\n\n\nShow code\n# boxplot(median_spend$Monthly_spend)\n# left skewed distribution\nquartiles <-quantile(median_spend$Monthly_spend, probs=c(.25,.75))\nIQR<-IQR(median_spend$Monthly_spend)\n\nlower <-quartiles[1]-1.5*IQR\nupper <-quartiles[2]+1.5*IQR\n\nmedian_spend<-median_spend %>% \n  filter((Monthly_spend>=lower) & (Monthly_spend <=upper))\n# After outlier removal\n# boxplot(median_spend$Monthly_spend)\n\n\n\n\nJoin tables\nIn order to understand whether different demographics have difference in spending pattern or financial health, the two tables need to be combined using participantId as key.\n\n\nShow code\ncombined<-merge(demo_info, median_spend, by =\"participantId\")\n\nsummary(combined)\n\n\n participantId householdSize    haveKids            age       \n 1      :  1   Min.   :1.000   Mode :logical   Min.   :18.00  \n 2      :  1   1st Qu.:1.000   FALSE:598       1st Qu.:29.00  \n 3      :  1   Median :2.000   TRUE :220       Median :39.00  \n 5      :  1   Mean   :1.873                   Mean   :39.24  \n 6      :  1   3rd Qu.:3.000                   3rd Qu.:50.00  \n 7      :  1   Max.   :3.000                   Max.   :60.00  \n (Other):812                                                  \n             educationLevel interestGroup   joviality             Food      \n Low                : 55    J      : 93   Min.   :0.000204   Min.   :241.3  \n HighSchoolOrCollege:421    F      : 90   1st Qu.:0.228201   1st Qu.:288.7  \n Bachelors          :210    G      : 87   Median :0.457937   Median :309.3  \n Graduate           :132    H      : 85   Mean   :0.476588   Mean   :354.4  \n                            D      : 83   3rd Qu.:0.715063   3rd Qu.:427.1  \n                            A      : 80   Max.   :0.999234   Max.   :582.2  \n                            (Other):300                                     \n   Recreation         Wage           Rent        Monthly_spend   \n Min.   :  0.0   Min.   :1760   Min.   : 231.7   Min.   : 500.5  \n 1st Qu.:277.8   1st Qu.:2469   1st Qu.: 433.4   1st Qu.:1135.8  \n Median :382.6   Median :3398   Median : 660.2   Median :1397.5  \n Mean   :361.3   Mean   :3663   Mean   : 634.1   Mean   :1360.9  \n 3rd Qu.:472.2   3rd Qu.:4554   3rd Qu.: 784.1   3rd Qu.:1580.5  \n Max.   :800.9   Max.   :8013   Max.   :1301.6   Max.   :2300.0"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#demographics-of-town",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#demographics-of-town",
    "title": "Take-home Exercise 1",
    "section": "Demographics of town",
    "text": "Demographics of town\n\nDistribution of Children status and education level and their relationship\nAround 30% of the town population have children and household size is relatively small ranging from 1 person to 3 people. Around 50% of the population has graduated from high school or college and only 8% have low education level.\n\n\nShow code\n# Distribution of Children Status\n# Distribution of Children Status\nd1<-demo_info %>% \n  count(haveKids=factor(haveKids)) %>% \n  mutate(pct=prop.table(n)) %>% \n  ggplot(aes(x = haveKids, y=n)) +\n  geom_col()+\n  geom_text(aes(x=haveKids, y= n,\n                label=paste0(n,\"\\n(\", round(pct*100,1),\"%)\"),\n                vjust=-0.5))+\n  ggtitle(\"Distribution of Children Status\")+\n  theme_minimal()+\n  xlab(\"Children Status\")+\n  ylab(\"Count\")+\n  ylim(c(0,850))\n\n# Distribution of Education levels\nd2<-demo_info %>% \n  count(educationLevel) %>% \n  mutate(pct=prop.table(n)) %>%\n  arrange(factor(educationLevel)) %>% \n  ggplot(aes(x = reorder(educationLevel, -n), y=n)) +\n  geom_col()+\n  geom_text(aes(x=educationLevel, y= n,\n                label=paste0(n,\"\\n(\", round(pct*100,1),\"%)\"),\n                vjust=-0.5))+\n  ggtitle(\"Distribution of Education Levels\")+\n  theme_minimal()+\n  xlab(\"Education Levels\")+\n  ylab(\"Count\")+\n  ylim(c(0,600))+\n  theme(axis.text.x = element_text(angle=10))\n\nd1 + d2\n\n\n\n\n\nThe following hypotheses were formulated to test the hypothesis that there is a relationship between education level and children status: H0: There is no association between education level and children status H1: There is an association between education level and children status We selected a confidence level of 95% and used chi-squared test for confirmatory analysis since education level and children status are categorical data and the observations are independent of one another. Since p value < 0.05, we can conclude that there is an association between children status and educational level. The group with lower education level is more likely to have children than bachelor and graduate group.\n\n\nShow code\n# Chi squared test for relationship between Children Status and Education Level\nd12<-ggbarstats(demo_info,\n               x=haveKids,\n               y=educationLevel,\n               label=\"both\"\n               )+\n  ggtitle(\"Significant Test of Association between Children Status and Education Level\") +\n  xlab(\"Education Levels\")\nd12"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#financial-health",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#financial-health",
    "title": "Take-home Exercise 1",
    "section": "Financial Health",
    "text": "Financial Health\n\nWage and Education Levels\nWe observed right skewed distribution of monthly wage in low, high school college and bachelor education groups while there is a relatively symmetrical distribution of monthly wage in graduate group. We also can see that there seems to be difference in the wage among all education groups.\n\n\nShow code\nggplot(combined,\n       aes(x = Wage, \n           y = educationLevel, \n           fill = factor(after_stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()+\n  ggtitle(\"Distribution of Wage across different Education Levels\")+\n  theme_minimal()+\n  ylab(\"Education Levels\")+\n  xlab(\"Monthly Wage\")\n\n\n\n\n\nSince the distribution of Wage does not follow normal distribution, we use Kruskal Wallis test to compare the mean monthly wage across different groups. Since p values are <0.5 for all groups as well as all pairwise comparisons, we can conclude that graduate education has the highest mean monthly wage followed by bachelor, high school or college and low education.\n\n\nShow code\nggbetweenstats(\n  data = combined,\n  x = educationLevel, \n  y = Wage,\n  type = \"np\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n) + \n  ggtitle(\"Compare mean Wage among Education Levels\")+\n  xlab(\"Education Levels\")\n\n\n\n\n\n\n\nWage and interest Group\nWe can also observe some differences in the mean wages among interest groups D, E, F (order: E<F<D) and between group D and B (D>B) and group D and A (D>A)\n\n\nShow code\nggbetweenstats(\n  data = combined,\n  x = interestGroup, \n  y = Wage,\n  type = \"np\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE,\n  package='pals',\n  palette=\"polychrome\"\n) + \n  ggtitle(\"Compare mean Wage among Interest Groups\")+\n  xlab(\"Interest Groups\")\n\n\n\n\n\n\n\nCost of living versus wage\nTo evaluate the cost of living and wage, intermediate calculation of the percentage of wage spent on all expenses categories (rent, food, recreation and education) was performed. In addition, since rent generally is the biggest expense, the percentage of wage spent on rent is also calculated and studied separately. People with lower wage spend a higher proportion of their wage on expenses.\n\n\nShow code\ncombined<-combined %>% \n  mutate(exp_pct=Monthly_spend/Wage*100) %>% \n  mutate(food_pct=Food/Wage*100) %>% \n  mutate(rent_pct=Rent/Wage*100) %>% \n  mutate(recreation_pct=Recreation/Wage*100)\n\n\nt test was performed to check the relationship between expense and wage. The Pearson correlation coefficient is -0.78 and p value <0.05, showing moderate negative correlation between expense as a percentage of wage and wage. This means that people with lower wage are more likely to spend a higher proportion of their wage.\n\n\nShow code\np <- ggscatterstats(\n  combined,\n  x = Wage,\n  y = exp_pct,\n  marginal=FALSE\n)+\n  ggtitle(\"Expense as a percentage of Wage versus Wage\")+\n  ylab(\"Expenses as percentage of Wage\")\np\n\n\n\n\n\n\n\nTrend in cost of living and wage\nWrangle data to get the demographic data combined with transaction by month\n\n\nShow code\ntrend<-transactions_amt %>% \n  group_by(month) %>% \n  summarise(Food=median(Food),\n            Rent=median(Rent),\n            Recreation=median(Recreation),\n            Wage=median(Wage),\n            Monthly_spend=median(Monthly_spend), \n            count=n())\n# head(trend)\n\n\nRemove March record because of abnormally high transaction counts and convert table to long form for plotting.\n\n\nShow code\n# Remove Mar 2022 record\ntrend<-trend[-1,]\n# Convert table to long form\ntrend<-trend %>% \n  gather(\"id\", \"value\", 2:6)\n# convert month to date data type for plotting\ntrend$month<-as.Date(trend$month)\n# head(trend)\n\n\nWe can see from the plotting of the different transaction categories over time that the median expenses on food and recreation and Wage are trending down while rent is stable.\n\nFoodRentRecreationWage\n\n\n\n\nShow code\ntrend %>% \n  filter(id=='Food')%>% \n  ggplot(aes(x = month , y = value )) +\n  geom_point()+\n  geom_line()+\n  scale_color_viridis_d()+ \n  theme_minimal()+\n  ggtitle(\"Trend of Median expenses on Food over time\")+\n  ylab(\"Amount in $\")+\n  xlab(\"Month\")+\n  scale_x_date(date_breaks=\"2 month\", date_labels=\"%m-%Y\")\n\n\n\n\n\n\n\n\n\nShow code\ntrend %>% \n  filter(id %in% c('Rent')) %>% \n  ggplot(aes(x = month , y = value)) +\n  geom_point()+\n  geom_line()+ \n  theme_minimal()+\n  ggtitle(\"Trend of Median expenses on Rent over time\")+\n  ylab(\"Amount in $\")+\n  xlab(\"Month\")+\n  scale_x_date(date_breaks=\"2 month\", date_labels=\"%m-%Y\")+\n  theme(legend.position=\"none\")\n\n\n\n\n\n\n\n\n\nShow code\ntrend %>% \n  filter(id ==c('Recreation'))%>% \n  ggplot(aes(x = month , y = value)) +\n  geom_point()+\n  geom_line()+\n  scale_color_viridis_d()+ \n  theme_minimal()+\n  ggtitle(\"Trend of Median expenses on Recreation over time\")+\n  ylab(\"Amount in $\")+\n  xlab(\"Month\")+\n  scale_x_date(date_breaks=\"2 month\", date_labels=\"%m-%Y\")\n\n\n\n\n\n\n\n\n\nShow code\ntrend %>% \n  filter(id %in% c('Wage')) %>% \n  ggplot(aes(x = month , y = value)) +\n  geom_point()+\n  geom_line()+\n  theme_minimal()+\n  ggtitle(\"Trend of Median expenses on Wage over time\")+\n  ylab(\"Amount in $\")+\n  xlab(\"Month\")+\n  scale_x_date(date_breaks=\"2 month\", date_labels=\"%m-%Y\")+\n  theme(legend.position=\"none\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#joviality",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#joviality",
    "title": "Take-home Exercise 1",
    "section": "Joviality",
    "text": "Joviality\n\nJoviality and education levels\nWe observed bimodal distribution of joviality in group with low or bachelor education with a higher percentage and a trimodal distribution in high school or college and graduate education.\n\n\nShow code\nggplot(demo_info,\n       aes(x = joviality, \n           y = educationLevel, \n           fill = factor(after_stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()+\n  ggtitle(\"Distribution of Joviality across different Education Levels\")+\n  theme_minimal()+\n  ylab(\"Education Levels\")+\n  xlab(\"Joviality\")+\n  geom_vline(aes(xintercept=0.5),\n             color=\"grey30\",\n             linetype=\"dashed\", \n             linewidth=1)\n\n\n\n\n\nSince the joviality of all education level groups is not normally distributed, Kruskall Wallis test was performed to test the hypotheses. We chose a confidence level of 95%. We conclude that there is no difference in joviality among education groups\n\n\nShow code\nggbetweenstats(\n  data = demo_info,\n  x = educationLevel, \n  y = joviality,\n  type = \"np\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)+\n  ggtitle(\"Compare mean Joviality across different Education Levels\")+\n  ylab(\"Education Levels\")+\n  xlab(\"Joviality\")\n\n\n\n\n\n\n\nJoviality vs expenses and wage\nJoviality is positively correlated with higher percentage of wage spent on expenses but negatively correlated with wage.\n\n\nShow code\nj1<-ggscatterstats(\n  data = combined,\n  x = exp_pct,\n  y = joviality,\n  marginal = FALSE,\n  )+  \n  ggtitle(\"Expense as % of Wage vs Joviality\")+\n  xlab(\"Expenses as percentage of Wage\")+\n  ylab(\"Joviality\")\n  \nj2<- ggscatterstats(\n  data = combined,\n  x = Wage,\n  y = joviality,\n  marginal = FALSE,\n  )+\n  ggtitle(\"Wage vs Joviality\")+\n  xlab(\"Wage\")+\n  ylab(\"Joviality\")\n\nj1 + j2\n\n\n\n\n\nJoviality is also positively correlated to recreation, food and rent expense. In addition, people who spend more of their wage on one expense category tend to spend more on other categories as well.\n\n\nShow code\ncombined %>% \n  select(joviality, recreation_pct, food_pct, rent_pct) %>% \n  ggcorrmat(colors   = c(\"#B2182B\", \"white\", \"#4D4D4D\"),\n  matrix.type  = \"lower\"\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "#Modelling and Analysing Network"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#load-packages",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#load-packages",
    "title": "Hands-on Exercise 5",
    "section": "Load packages",
    "text": "Load packages\n\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#import-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#import-data",
    "title": "Hands-on Exercise 5",
    "section": "Import Data",
    "text": "Import Data\nTwo datasets: Edge data: GAStech-email_edges.csv which consists of two weeks of 9063 emails correspondances between 55 employees.\n\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#review-imported-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#review-imported-data",
    "title": "Hands-on Exercise 5",
    "section": "Review imported data",
    "text": "Review imported data\nExamine the structure of the data\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\n\n\n\n\n\nNote\n\n\n\nSentDate is treated as “Character” data type instead of date data type"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-wrangling",
    "title": "Hands-on Exercise 5",
    "section": "Data wrangling",
    "text": "Data wrangling\n\nNode data\n\nglimpse(GAStech_nodes)\n\nRows: 54\nColumns: 4\n$ id         <dbl> 1, 2, 3, 4, 5, 6, 7, 44, 45, 46, 8, 9, 10, 11, 12, 13, 14, …\n$ label      <chr> \"Mat.Bramar\", \"Anda.Ribera\", \"Rachel.Pantanal\", \"Linda.Lago…\n$ Department <chr> \"Administration\", \"Administration\", \"Administration\", \"Admi…\n$ Title      <chr> \"Assistant to CEO\", \"Assistant to CFO\", \"Assistant to CIO\",…\n\n\n\n\nEdge data\nExamine the structure of the edge data\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\n\n\n\n\n\nNote\n\n\n\nSentDate is treated as “Character” data type instead of date data type\n\n\nConvert data type\n\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\n\n\n\n\n\nNote\n\n\n\nlubridate is an R package that makes it easier to work with dates and times. dmy() transforms the SentDate to Date data type. wday() returns the day of the week\n\n\nView data after modification\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 10\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    <date> 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     <ord> Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…\n\n\nLet’s aggregate the individual by date, senders, receivers, main subject and day of the week.\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%\n  filter(Weight > 1) %>%\n  ungroup()\n\nView data after aggregation\n\nglimpse(GAStech_edges_aggregated)\n\nRows: 1,372\nColumns: 4\n$ source  <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  <dbl> 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday <ord> Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  <int> 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#create-network-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#create-network-object",
    "title": "Hands-on Exercise 5",
    "section": "Create network object",
    "text": "Create network object\n\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#view-the-tbl_graph-network-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#view-the-tbl_graph-network-object",
    "title": "Hands-on Exercise 5",
    "section": "View the tbl_graph network object",
    "text": "View the tbl_graph network object\nThe output above reveals that GAStech_graph is a tbl_graph object with 54 nodes and 4541 edges It states that the Node Data is active. The notion of an active tibble within a tbl_graph object makes it possible to manipulate the data in one tibble at a time.\n\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 54 × 4\n     id label               Department     Title                                \n  <dbl> <chr>               <chr>          <chr>                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# ℹ 48 more rows\n#\n# A tibble: 1,372 × 4\n   from    to Weekday Weight\n  <int> <int> <ord>    <int>\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#change-active-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#change-active-object",
    "title": "Hands-on Exercise 5",
    "section": "Change active object",
    "text": "Change active object\nActivate the edges and rearrange the rows in the edges tibble to list those with the highest “weight” first, we could use activate() and then arrange().\n\nGAStech_graph %>%\n  activate(edges) %>%\n  arrange(desc(Weight))\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 1,372 × 4\n   from    to Weekday  Weight\n  <int> <int> <ord>     <int>\n1    40    41 Saturday     13\n2    41    43 Monday       11\n3    35    31 Tuesday      10\n4    40    41 Monday       10\n5    40    43 Monday       10\n6    36    32 Sunday        9\n# ℹ 1,366 more rows\n#\n# A tibble: 54 × 4\n     id label           Department     Title           \n  <dbl> <chr>           <chr>          <chr>           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plot-a-basic-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plot-a-basic-network-graph",
    "title": "Hands-on Exercise 5",
    "section": "Plot a basic network graph",
    "text": "Plot a basic network graph\n\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nggraph() can use either an igraph object or a tbl_graph object."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#change-default-network-graph-theme",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#change-default-network-graph-theme",
    "title": "Hands-on Exercise 5",
    "section": "Change default network graph theme",
    "text": "Change default network graph theme\nUse theme_graph() to remove the x and y axes\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#change-color-of-the-plot",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#change-color-of-the-plot",
    "title": "Hands-on Exercise 5",
    "section": "Change color of the plot",
    "text": "Change color of the plot\ntheme_graph() makes it easy to change the coloring of the plot.\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-ggraphs-layouts",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-ggraphs-layouts",
    "title": "Hands-on Exercise 5",
    "section": "Working with ggraph’s layouts",
    "text": "Working with ggraph’s layouts\nggraph support many layout for standard used, they are: star, circle, nicely (default), dh, gem, graphopt, grid, mds, spahere, randomly, fr, kk, drl and lgl.\n\nFruchterman and Reingold layout.\n\ng <- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modify-network-nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modify-network-nodes",
    "title": "Hands-on Exercise 5",
    "section": "Modify network nodes",
    "text": "Modify network nodes\n\nColour each node by referring to their respective departments.\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\ngeom_node_point is equivalent in functionality to geo_point of ggplot2. It allows for simple plotting of nodes in different shapes, colours and sizes. In the codes chunks above colour and size are used."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modify-edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modify-edges",
    "title": "Hands-on Exercise 5",
    "section": "Modify edges",
    "text": "Modify edges\nThickness of the edges will be mapped with the Weight variable.\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\ngeom_edge_link draws edges in the simplest way - as straight lines between the start and end nodes. But, it can do more that that. In the example above, argument width is used to map the width of the line in proportional to the Weight attribute and argument alpha is used to introduce opacity on the line."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edge",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edge",
    "title": "Hands-on Exercise 5",
    "section": "Working with facet_edge()",
    "text": "Working with facet_edge()\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)\n\n\n\n\nUse theme() to change the position of the legend.\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2) +\n  theme(legend.position = 'bottom')\n  \ng + facet_edges(~Weekday)\n\n\n\n\nAdd frame to each facet.\n\nset_graph_style() \n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_nodes",
    "title": "Hands-on Exercise 5",
    "section": "Working with facet_nodes()",
    "text": "Working with facet_nodes()\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#compute-and-visualize-centrality-indices",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#compute-and-visualize-centrality-indices",
    "title": "Hands-on Exercise 5",
    "section": "Compute and visualize centrality indices",
    "text": "Compute and visualize centrality indices\nmutate() of dplyr is used to perform the computation. the algorithm used, on the other hand, is the centrality_betweenness() of tidygraph.\n\ng <- GAStech_graph %>%\n  mutate(betweenness_centrality = centrality_betweenness()) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()\n\n\n\n\nFrom ggraph v2.0 onward tidygraph algorithms such as centrality measures can be accessed directly in ggraph calls. This means that it is no longer necessary to precompute and store derived node and edge centrality measures on the graph in order to use them in a plot.\n\ng <- GAStech_graph %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualize-community",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualize-community",
    "title": "Hands-on Exercise 5",
    "section": "Visualize community",
    "text": "Visualize community\ntidygraph package inherits many of the community detection algorithms imbedded into igraph and makes them available to us, including Edge-betweenness (group_edge_betweenness), Leading eigenvector (group_leading_eigen), Fast-greedy (group_fast_greedy), Louvain (group_louvain), Walktrap (group_walktrap), Label propagation (group_label_prop), InfoMAP (group_infomap), Spinglass (group_spinglass), and Optimal (group_optimal). Some community algorithms are designed to take into account direction or weight, while others ignore it.\nIn the code chunk below group_edge_betweenness() is used.\n\ng <- GAStech_graph %>%\n  mutate(community = as.factor(group_edge_betweenness(weights = Weight, directed = TRUE))) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community))  \n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "title": "Hands-on Exercise 5",
    "section": "Data preparation",
    "text": "Data preparation\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %>%\n  rename(from = id) %>%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %>%\n  rename(to = id) %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(from, to) %>%\n    summarise(weight = n()) %>%\n  filter(from!=to) %>%\n  filter(weight > 1) %>%\n  ungroup()\n\n\nglimpse(GAStech_edges_aggregated)\n\nRows: 839\nColumns: 3\n$ from   <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ to     <dbl> 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,…\n$ weight <int> 21, 21, 21, 21, 21, 21, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plot-the-first-interative-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plot-the-first-interative-network-graph",
    "title": "Hands-on Exercise 5",
    "section": "Plot the first interative network graph",
    "text": "Plot the first interative network graph\n\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-layout",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-layout",
    "title": "Hands-on Exercise 5",
    "section": "Working with layout",
    "text": "Working with layout\nIn the code chunk below, Fruchterman and Reingold layout is used.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---nodes",
    "title": "Hands-on Exercise 5",
    "section": "Working with visual attributes - Nodes",
    "text": "Working with visual attributes - Nodes\nvisNetwork() looks for a field called “group” in the nodes object and colour the nodes according to the values of the group field. Rename Department field to group.\n\nGAStech_nodes <- GAStech_nodes %>%\n  rename(group = Department) \n\nvisNetwork shades the nodes by assigning unique colour to each category in the group field.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---edges",
    "title": "Hands-on Exercise 5",
    "section": "Working with visual attributes - Edges",
    "text": "Working with visual attributes - Edges\nvisEdges() is used to symbolise the edges: - The argument arrows is used to define where to place the arrow. - The smooth argument is used to plot the edges using a smooth curve.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactivity",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactivity",
    "title": "Hands-on Exercise 5",
    "section": "Interactivity",
    "text": "Interactivity\nvisOptions() is used to incorporate interactivity features in the data visualisation.\nThe argument highlightNearest highlights nearest when clicking a node. The argument nodesIdSelection adds an id node selection creating an HTML select element.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#load-packages",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#load-packages",
    "title": "Take Home Exercise 02",
    "section": "Load packages",
    "text": "Load packages\nThe main packages for plotting graphs are: igraph, tidygraph, ggraph, visNetwork, sf, sfnetworks. The rest of the packages are for data wrangling.\n\npacman::p_load(igraph,tidygraph,sf,sfnetworks,ggraph,visNetwork,sftime,ggmap,lubridate,clock,tmap,readr,ggplot2,tidyverse,graphlayouts,assertthat,purrr, jsonlite, zoo)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#import-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#import-data",
    "title": "Take Home Exercise 02",
    "section": "Import data",
    "text": "Import data\nUse fromJson from package jsonlite to import main graph data from json file format\n\nMC2<-fromJSON(\"data/mc2_challenge_graph.json\")\n\nImport bundle data. Each bundle represents the output of an AI program for link inference. Each bundle represents a list of potential edges to add to the main graph. The challenge is to decide WHICH of these bundles should be used.\n\ncarp<-fromJSON(\"data/bundles/carp.json\")\ncatfish<-fromJSON(\"data/bundles/catfish.json\")\nchub_mackerel<-fromJSON(\"data/bundles/chub_mackerel.json\")\ncod<-fromJSON(\"data/bundles/cod2.json\")\nherring<-fromJSON(\"data/bundles/herring.json\")\nlichen<-fromJSON(\"data/bundles/lichen.json\")\nmackerel<-fromJSON(\"data/bundles/mackerel.json\")\npollock<-fromJSON(\"data/bundles/pollock.json\")\nsalmon<-fromJSON(\"data/bundles/salmon.json\")\nsalmon_wgl<-fromJSON(\"data/bundles/salmon_wgl.json\")\nshark<-fromJSON(\"data/bundles/shark.json\")\ntuna<-fromJSON(\"data/bundles/tuna.json\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#deal-with-na-if-cannot-deduce-remove",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#deal-with-na-if-cannot-deduce-remove",
    "title": "Take Home Exercise 02",
    "section": "Deal with NA; if cannot deduce, remove",
    "text": "Deal with NA; if cannot deduce, remove"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#link-table-same-target-to-source-with-multiple-links---aggregate-to-get-weight-no-of-time-the-target-links-with-the-source",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#link-table-same-target-to-source-with-multiple-links---aggregate-to-get-weight-no-of-time-the-target-links-with-the-source",
    "title": "Take Home Exercise 02",
    "section": "link table: same target to source with multiple links -> aggregate to get weight (no of time the target links with the source)",
    "text": "link table: same target to source with multiple links -> aggregate to get weight (no of time the target links with the source)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#directed-link",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#directed-link",
    "title": "Take Home Exercise 02",
    "section": "directed link",
    "text": "directed link"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take Home Exercise 02",
    "section": "",
    "text": "Oceanus has enlisted FishEye International’s assistance in identifying potentially illegal fishing companies. FishEye’s analysts were provided with import/export data for Oceanus’ marine and fishing sectors, but the data was incomplete. To aid their analysis, FishEye transformed the trade data into a knowledge graph to understand business relationships, specifically to combat illegal, unreported, and unregulated (IUU) fishing and protect affected marine species. While node-link diagrams provided a high-level overview of the knowledge graph, FishEye now seeks visualizations that offer more detailed patterns about entities within the graph. The analysis consists of two main parts.\nFirstly, FishEye aims to visualize temporal patterns to determine if companies engaging in illegal fishing activities have reemerged under different names after shutting down. They seek assistance in comparing the activities of these companies over time.\nSecondly, FishEye has employed various tools, including artificial intelligence, to reason on the knowledge graph and propose additional links to expand the dataset. They have presented 12 groups of link suggestions and require aid in evaluating the reliability of these tools for completing the graph. FishEye is particularly interested in identifying new temporal patterns or anomalies that arise when new links are added.\nWe aim to use visual analytics to help FishEye identify companies that may be engaged in illegal fishing."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#extract-node-information-for-the-main-graph",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#extract-node-information-for-the-main-graph",
    "title": "Take Home Exercise 02",
    "section": "Extract node information for the main graph",
    "text": "Extract node information for the main graph\nWe will ignore the dataset column and use select to select id, shipping country and receiving country information. Use glimpse to view the data.\n\nMC2_nodes <- as_tibble(MC2$nodes) %>% \n  select(id, shpcountry,rcvcountry)\n\nglimpse(MC2_nodes)\n\nRows: 34,576\nColumns: 3\n$ id         <chr> \"AquaDelight Inc and Son's\", \"BaringoAmerica Marine Ges.m.b…\n$ shpcountry <chr> \"Polarinda\", NA, \"Oceanus\", NA, \"Oceanus\", \"Kondanovia\", NA…\n$ rcvcountry <chr> \"Oceanus\", NA, \"Oceanus\", NA, \"Oceanus\", \"Utoporiana\", NA, …\n\n\nUse as.factor to convert the character data type to factor.\n\nMC2_nodes$id <-as.factor(MC2_nodes$id)\nMC2_nodes$shpcountry<-as.factor(MC2_nodes$shpcountry)\nMC2_nodes$rcvcountry<-as.factor(MC2_nodes$rcvcountry)\n\nsummary(MC2_nodes)\n\n       id             shpcountry           rcvcountry   \n -1     :    1   Marebak   : 3657   Oceanus     :29312  \n -10    :    1   Alverossia:  600   Coralmarica :  552  \n -100   :    1   Isliandor :  437   Sol y Oceana:  277  \n -1000  :    1   Merigrad  :  435   Marebak     :  151  \n -10000 :    1   Oceanus   :  418   Riodelsol   :   99  \n -10001 :    1   (Other)   : 6670   (Other)     : 1276  \n (Other):34570   NA's      :22359   NA's        : 2909  \n\n\n\n\n\n\n\n\nNote\n\n\n\nWe observed many NA in the shpcountry and rcvcountry columns. Since we are unable to infer the values for these columns, we need to remove rows with NA values.\n\n\nWe use group_by to check for each company id how many different shipcountry and rcvcounty are available to identify the overall trend. Each company only ship to 1 receiving country and ship from 1 shipping country.\n\ncount<-MC2_nodes %>% \n  group_by(id) %>% \n  summarise(no_shpcountry=n_distinct(shpcountry),\n            no_rcvcountry=n_distinct(rcvcountry)) \n\nsummary(count)\n\n       id        no_shpcountry no_rcvcountry\n -1     :    1   Min.   :1     Min.   :1    \n -10    :    1   1st Qu.:1     1st Qu.:1    \n -100   :    1   Median :1     Median :1    \n -1000  :    1   Mean   :1     Mean   :1    \n -10000 :    1   3rd Qu.:1     3rd Qu.:1    \n -10001 :    1   Max.   :1     Max.   :1    \n (Other):34570"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#deal-with-na-data-in-node-info",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#deal-with-na-data-in-node-info",
    "title": "Take Home Exercise 02",
    "section": "Deal with NA data in node info",
    "text": "Deal with NA data in node info\nUse na.omit to remove rows with NA.\n\nMC2_nodes<-MC2_nodes %>% \n  na.omit()\n\nsummary(MC2_nodes)\n\n       id             shpcountry          rcvcountry  \n -1143  :   1   Marebak    :2056   Oceanus     :7174  \n -12465 :   1   Alverossia : 545   Coralmarica : 538  \n -12516 :   1   Coralmarica: 395   Sol y Oceana: 267  \n -13    :   1   Isliandor  : 392   Marebak     : 151  \n -15    :   1   Oceanus    : 386   Utoporiana  :  97  \n -1515  :   1   Puerto Sol : 367   Puerto Sol  :  76  \n (Other):9326   (Other)    :5191   (Other)     :1029  \n\n\nWe use group_by to check for each company id how many different shipcountry and rcvcounty are available to identify the overall trend. Each company only ship to 1 receiving country and ship from 1 shipping country.\n\ncount<-MC2_nodes %>% \n  group_by(id) %>% \n  summarise(no_shpcountry=n_distinct(shpcountry),\n            no_rcvcountry=n_distinct(rcvcountry)) \n\nsummary(count)\n\n       id       no_shpcountry no_rcvcountry\n -1143  :   1   Min.   :1     Min.   :1    \n -12465 :   1   1st Qu.:1     1st Qu.:1    \n -12516 :   1   Median :1     Median :1    \n -13    :   1   Mean   :1     Mean   :1    \n -15    :   1   3rd Qu.:1     3rd Qu.:1    \n -1515  :   1   Max.   :1     Max.   :1    \n (Other):9326"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#extract-edge-information-for-the-main-graph",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#extract-edge-information-for-the-main-graph",
    "title": "Take Home Exercise 02",
    "section": "Extract edge information for the main graph",
    "text": "Extract edge information for the main graph\nWe only considered edges information of nodes in MC2_nodes and used filter to filter out the edges for those nodes. We ignored the dataset and type column and used select to select the rest of the attributes of edges of the main graph. Used glimpse to view the data.\n\nMC2_edges <-as_tibble(MC2$links) %>%\n  select(source, target, arrivaldate,hscode,weightkg,volumeteu,valueofgoodsusd,valueofgoods_omu) %>% \n  distinct()\n\nglimpse(MC2_edges)\n\nRows: 5,309,087\nColumns: 8\n$ source           <chr> \"AquaDelight Inc and Son's\", \"AquaDelight Inc and Son…\n$ target           <chr> \"BaringoAmerica Marine Ges.m.b.H.\", \"BaringoAmerica M…\n$ arrivaldate      <chr> \"2034-02-12\", \"2034-03-13\", \"2028-02-07\", \"2028-02-23…\n$ hscode           <chr> \"630630\", \"630630\", \"470710\", \"470710\", \"470710\", \"47…\n$ weightkg         <int> 4780, 6125, 10855, 11250, 11165, 11290, 9000, 19490, …\n$ volumeteu        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ valueofgoodsusd  <dbl> NA, NA, NA, NA, NA, NA, 87110, 188140, NA, 221110, 58…\n$ valueofgoods_omu <dbl> 141015, 141015, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n\n\n\n\n\n\n\n\nNote\n\n\n\nWrong data types for arrivaldate as well as other character type data need to be converted.\n\n\nWe used as.factor to convert source, target, hscode. mutate and ymd were used to convert arrival date data type to date and extract day of the week information from the date with wday\n\nMC2_edges<-MC2_edges %>% \n  mutate(arrivaldate = ymd(arrivaldate)) %>% \n  mutate(weekday = wday(arrivaldate,\n                        label = TRUE,\n                        abbr = FALSE)) %>% \n  mutate(monthyear=as.yearmon(arrivaldate)) %>% \n  mutate(year=year(arrivaldate))%>% \n  filter(source!=target)\n\nMC2_edges$source<-as.factor(MC2_edges$source)\nMC2_edges$target<-as.factor(MC2_edges$target)\nglimpse(MC2_edges)\n\nRows: 5,158,933\nColumns: 11\n$ source           <fct> AquaDelight Inc and Son's, AquaDelight Inc and Son's,…\n$ target           <fct> BaringoAmerica Marine Ges.m.b.H., BaringoAmerica Mari…\n$ arrivaldate      <date> 2034-02-12, 2034-03-13, 2028-02-07, 2028-02-23, 2028…\n$ hscode           <chr> \"630630\", \"630630\", \"470710\", \"470710\", \"470710\", \"47…\n$ weightkg         <int> 4780, 6125, 10855, 11250, 11165, 11290, 9000, 19490, …\n$ volumeteu        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ valueofgoodsusd  <dbl> NA, NA, NA, NA, NA, NA, 87110, 188140, NA, 221110, 58…\n$ valueofgoods_omu <dbl> 141015, 141015, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ weekday          <ord> Sunday, Monday, Monday, Wednesday, Monday, Monday, We…\n$ monthyear        <yearmon> Feb 2034, Mar 2034, Feb 2028, Feb 2028, Sep 2028,…\n$ year             <dbl> 2034, 2034, 2028, 2028, 2028, 2028, 2028, 2028, 2028,…\n\n\nsummary was used to get a sense of data distribution. Since volumeteu, valuesofgoods_usd and valueofgoods_omu mostly contain 0 or NA values, we can disregard these columns in the analysis. We also observed that Friday seems to have the highest number of shipments while Wednesday has the lowest number of shipments.\n\nsummary(MC2_edges)\n\n                                        source       \n Fresh Limited Liability Company           : 152521  \n Uttar Pradesh s CJSC                      : 116151  \n bǐ mù yú Sagl Distribution                :  89207  \n Coastal Cruisers Pic Shipping             :  82010  \n Chhattisgarh   Marine ecology A/S Delivery:  81212  \n Mar y Luna Sagl                           :  76853  \n (Other)                                   :4560979  \n                              target         arrivaldate        \n hǎi dǎn Corporation Wharf       : 448746   Min.   :2028-01-01  \n Caracola del Sol Services       : 190708   1st Qu.:2029-09-16  \n Costa de la Felicidad Shipping  : 160527   Median :2031-05-06  \n Panope Limited Liability Company: 158081   Mean   :2031-06-03  \n Saltwater Supreme ОАО Forwading : 157800   3rd Qu.:2033-02-26  \n Mar del Este CJSC               : 126180   Max.   :2034-12-30  \n (Other)                         :3916891                       \n    hscode             weightkg           volumeteu      valueofgoodsusd    \n Length:5158933     Min.   :        0   Min.   :   0.0   Min.   :0.000e+00  \n Class :character   1st Qu.:     3475   1st Qu.:   0.0   1st Qu.:2.843e+04  \n Mode  :character   Median :    11070   Median :   0.0   Median :7.385e+04  \n                    Mean   :    38794   Mean   :   1.5   Mean   :8.716e+05  \n                    3rd Qu.:    19960   3rd Qu.:   0.0   3rd Qu.:1.601e+05  \n                    Max.   :495492485   Max.   :1215.0   Max.   :2.258e+11  \n                                        NA's   :412222   NA's   :2779774    \n valueofgoods_omu        weekday         monthyear         year     \n Min.   :    1100   Sunday   :788160   Min.   :2028   Min.   :2028  \n 1st Qu.:  148130   Monday   :745243   1st Qu.:2030   1st Qu.:2029  \n Median :  504485   Tuesday  :675274   Median :2031   Median :2031  \n Mean   : 1665142   Wednesday:601902   Mean   :2031   Mean   :2031  \n 3rd Qu.: 1202560   Thursday :691915   3rd Qu.:2033   3rd Qu.:2033  \n Max.   :44744530   Friday   :866322   Max.   :2035   Max.   :2034  \n NA's   :5158652    Saturday :790117"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#this-is-a-directed-multi-graph",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#this-is-a-directed-multi-graph",
    "title": "Take Home Exercise 02",
    "section": "This is a directed multi-graph",
    "text": "This is a directed multi-graph"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#create-individual-graphs-for-each-of-the-bundle-see-which-one-more-complex-can-calculate-centrality-find-ego-actors-pluck-into-the-bigger-graph-to-find-relationship.-use-visnetwork-to-make-interactive-version-click-on-the-name-based-on-the-bundle-to-know-what-happen-in-the-big-file.-plot-the-time-graph-for-all-the-interactions-occured-coordinated-linked-view",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#create-individual-graphs-for-each-of-the-bundle-see-which-one-more-complex-can-calculate-centrality-find-ego-actors-pluck-into-the-bigger-graph-to-find-relationship.-use-visnetwork-to-make-interactive-version-click-on-the-name-based-on-the-bundle-to-know-what-happen-in-the-big-file.-plot-the-time-graph-for-all-the-interactions-occured-coordinated-linked-view",
    "title": "Take Home Exercise 02",
    "section": "create individual graphs for each of the bundle, see which one more complex, can calculate centrality, find ego actors, pluck into the bigger graph to find relationship. use visnetwork to make interactive version, click on the name based on the bundle to know what happen in the big file. Plot the time graph for all the interactions occured coordinated linked view",
    "text": "create individual graphs for each of the bundle, see which one more complex, can calculate centrality, find ego actors, pluck into the bigger graph to find relationship. use visnetwork to make interactive version, click on the name based on the bundle to know what happen in the big file. Plot the time graph for all the interactions occured coordinated linked view\n#2000 links: take out the very high frequency links, only take out top 50 source and top 50 target"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#find-top-sources-and-targets",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#find-top-sources-and-targets",
    "title": "Take Home Exercise 02",
    "section": "Find top sources and targets",
    "text": "Find top sources and targets\nTo find the top source, we first aggregate the weight by source id. We used `arrange` to sort the weight in descending order. top_n was used to get the top 50 source with the highest weight\n\ntop_source<-MC2_edges_aggregated %>% \n  group_by(source) %>%\n  summarise(weight=sum(weight)) %>%\n  arrange(desc(weight)) %>% \n  top_n(50,weight)\n\ntop_source\n\n# A tibble: 50 × 2\n   source                                     weight\n   <fct>                                       <int>\n 1 Fresh Limited Liability Company            147137\n 2 Chhattisgarh   Marine ecology A/S Delivery 112005\n 3 Uttar Pradesh s CJSC                       109347\n 4 French Crab S.p.A. Worldwide                86633\n 5 bǐ mù yú Sagl Distribution                  74955\n 6 Mar y Luna Sagl                             74226\n 7 Coastal Cruisers Pic Shipping               73564\n 8 Marine Masterminds Dry dock                 69762\n 9 Zambezi Gorge  N.V. Transport               65305\n10 Orange River   GmbH & Co. KG Shipping       57622\n# ℹ 40 more rows\n\n\nTo find the top target, we first aggregate the weight by source id. We used `arrange` to sort the weight in descending order. top_n was used to get the top 50 sources with the highest weight\n\ntop_target<-MC2_edges_aggregated %>% \n  group_by(target) %>%\n  summarise(weight=sum(weight)) %>% \n  arrange(desc(weight)) %>% \n  top_n(50,weight)\n\ntop_target\n\n# A tibble: 50 × 2\n   target                                       weight\n   <fct>                                         <int>\n 1 hǎi dǎn Corporation Wharf                    402047\n 2 Saltwater Supreme ОАО Forwading              178985\n 3 Caracola del Sol Services                    172518\n 4 Panope Limited Liability Company             152921\n 5 Costa de la Felicidad Shipping               142912\n 6 Mar del Este CJSC                            101308\n 7 Coral Cove BV Delivery                        97582\n 8 Sailors and Surfers Incorporated Enterprises  94501\n 9 Pao gan SE Seal                               78697\n10 Sea Breezes GmbH & Co. KG Shark               70991\n# ℹ 40 more rows\n\n\nWe used filter to filter the edges and nodes that contain the source in top_source and target in top_target\n\ntop_MC2_edges<-MC2_edges_aggregated %>% \n  filter(source %in% top_source$source &\n         target %in% top_target$target) \ntop_MC2_edges\n\n# A tibble: 1,573 × 4\n   source                            target                      weight weightkg\n   <fct>                             <fct>                        <int>    <dbl>\n 1 Arunachal Pradesh s A/S Transport Arunachal Pradesh s A/S Tr…  14052    1636.\n 2 Arunachal Pradesh s A/S Transport Black Sea Tuna Snapper           1      30 \n 3 Arunachal Pradesh s A/S Transport Chhattisgarh   Marine ecol…     19     483.\n 4 Arunachal Pradesh s A/S Transport Coastal Castaway Coast Cor…     17     558.\n 5 Arunachal Pradesh s A/S Transport Oceanic Explorers Sashimi …      2     282.\n 6 Arunachal Pradesh s A/S Transport Olas del Mar Worldwide          53     166.\n 7 Arunachal Pradesh s A/S Transport Portuguese Tuna Incorporat…      1     800 \n 8 Arunachal Pradesh s A/S Transport ReefRider Foods Ltd. Corpo…      8     234.\n 9 Arunachal Pradesh s A/S Transport Saltwater Supreme Pelican …      1     290 \n10 Arunachal Pradesh s A/S Transport Uttarakhand  Market Limite…      1      20 \n# ℹ 1,563 more rows\n\n\n\ntop_MC2_nodes<-MC2_nodes %>% \n  filter(id %in% top_MC2_edges$source|\n         id %in% top_MC2_edges$target) \nglimpse(top_MC2_nodes)\n\nRows: 97\nColumns: 3\n$ id         <fct> Olas del Mar Worldwide, French Crab S.p.A. Worldwide, Panop…\n$ shpcountry <fct> Oceanus, Kondanovia, Vesperanda, Marebak, Oceanus, Alveross…\n$ rcvcountry <fct> Oceanus, Utoporiana, Oceanus, Oceanus, Oceanus, Oceanus, Oc…\n\n\nThis is a directed multi-graph\ncreate individual graphs for each of the bundle, see which one more complex, can calculate centrality, find ego actors, pluck into the bigger graph to find relationship. use visnetwork to make interactive version, click on the name based on the bundle to know what happen in the big file. Plot the time graph for all the interactions occured coordinated linked view"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualize-the-main-graph",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualize-the-main-graph",
    "title": "Take Home Exercise 02",
    "section": "Visualize the main graph",
    "text": "Visualize the main graph\n\nMC2_graph<-tbl_graph(nodes=MC2_nodes_aggregated,                          edges=MC2_edges_aggregated,                          directed = TRUE)\n\n\nMC2_graph \n\n# A tbl_graph: 120 nodes and 217 edges\n#\n# A directed acyclic multigraph with 13 components\n#\n# A tibble: 120 × 3\n  id    shpcountry rcvcountry\n  <fct> <fct>      <fct>     \n1 -1155 <NA>       Oceanus   \n2 -131  <NA>       Oceanus   \n3 -206  <NA>       Oceanus   \n4 -3305 <NA>       Oceanus   \n5 -3346 <NA>       Oceanus   \n6 -3413 <NA>       Oceanus   \n# ℹ 114 more rows\n#\n# A tibble: 217 × 5\n   from    to hscode  year weight\n  <int> <int> <fct>  <dbl>  <int>\n1     1     2 304810  2030     22\n2     1     2 304810  2032     22\n3     3     4 304810  2029     37\n# ℹ 214 more rows\n\n\n\n# |fig-width: 100 \n# |fig-height: 100 \nset_graph_style()\nset.seed(1234)\nMC2_graph %>%\n  ggraph(layout = \"fr\")+   \n  geom_edge_link()+   \n  geom_node_point()+   \n  theme_graph()\n\n\n\n\n\nMC2_graph %>% \n  mutate(centrality = centrality_authority())%>%\n  ggraph(layout = \"fr\") +\n  geom_edge_link() +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = centrality, colour = centrality))+\n  scale_color_continuous(guide = 'legend') +\n  theme_graph()\n\n\n\n\n\nedges_df<-MC2_graph %>% \n  activate(edges) %>% \n  as.tibble()\n\n\nnodes_df<-MC2_graph %>% \n  activate(nodes) %>% \n  as.tibble() %>% \n  rename(label=id) %>% \n  mutate(id=row_number()) %>% \n  select(id,label)\n\n\nvisNetwork(nodes_df,edges_df)%>%    \n  visIgraphLayout(layout = \"layout_with_fr\") %>%  \n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE,              \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%    \n  visLayout(randomSeed=123) %>%    \n  visOptions(highlightNearest = TRUE, \n             nodesIdSelection = TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#filter-out-irrelevant-hscode",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#filter-out-irrelevant-hscode",
    "title": "Take Home Exercise 02",
    "section": "Filter out irrelevant hscode",
    "text": "Filter out irrelevant hscode\nWe use n_distinct() to check the number of hscode available in the dataset. There are many hscode values that are not relevant to our project. For example, hscode 470710 is for shipment of paper or paperboard. hscode that are relevant to our fish data will include only those that starts with:\n\n“301”: Live Fish\n“302: Fresh or chilled fish exclude fish fillets and fish meat in 304\n“303”: Frozen fish\n“304”: Fish fillets and fish meat (fresh, chilled or frozen)\n“305”: Fish, dried, salted or in brine\n“1604”: Extracts and juices of meat, fish or crustaceans molluscs or other aquatic invertebrates\n“1605”: Prepared or preserved fish\n\nwe use substr() to extract the first 3 digits from hscode and then filter rows with only the hscode that starts with 301, 302, 303, 304, 305. We also extract the first 4 digits from hscode and filter those with 1604 and 1605.\n\nn_distinct(MC2_edges$hscode)\n\n[1] 4748\n\n\n\nMC2_edges_filtered<-MC2_edges %>% \n  mutate(sub_hscode3=substr(hscode,1,3)) %>%\n  mutate(sub_hscode4=substr(hscode,1,4)) %>% \n  filter(sub_hscode3 %in% c(\"301\",\"302\",\"303\",\"304\",\"305\")|sub_hscode4 %in% c(\"1604\",\"1605\")) \n\nMC2_edges_filtered$hscode<-as.factor(MC2_edges_filtered$hscode)\n\nsummary(MC2_edges_filtered$hscode)\n\n 304620  160414  304610  160521  304710  304750  304810  160510  160529  304870 \n  87327   81628   36540   30238   27165   23911   21418   20530   14274   11508 \n 303890  304720  304890  304990  160540  160420  303230  304740  303660  160413 \n  10984    9714    9597    9444    9199    8977    8612    8505    7370    7148 \n 303120  303130  160553  304790  304830  160419  304820  305320  160411  303630 \n   6972    6690    4758    4530    3720    3007    2675    2192    2111    1960 \n 303110  160556  305420  303310  304940  160415  303540  305410  160416  160551 \n   1883    1871    1785    1634    1588    1446    1385    1248    1246    1225 \n 160554  303290  303640  304390  305510  303420  303510  303140  160417  303530 \n   1175    1072    1049     751     751     730     721     700     690     615 \n 305630  305590  303690  303390  303330  304840  303670  303910  160559  304910 \n    612     592     588     410     396     384     383     363     357     355 \n 303590  303240  303830  304850  160552  304950  160555  160412  160558  305200 \n    324     317     316     280     260     236     218     201     176     150 \n 160432  303810  304690  303410  303430  304420  305490  301190  304490  303550 \n    145     140     137     128     127     117     112     111     107     105 \n 303570  160530  305100  305530  303250  305620  305690  302460  303820  305540 \n    100      88      86      79      78      78      78      74      68      63 \n 301110  303840  160557  303190  304410  304460  304320  305790  305390 (Other) \n     62      62      59      58      54      50      48      48      43     807 \n\n\n\nMC2_edges_aggregated<-MC2_edges_filtered %>%\n  filter(hscode=='304810') %>% \n  group_by(source, target, hscode, year) %>% \n  summarise(weight=n()) %>%\n  filter(weight>20) %>% \n  ungroup()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#prepare-nodes-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#prepare-nodes-data",
    "title": "Take Home Exercise 02",
    "section": "Prepare nodes data",
    "text": "Prepare nodes data\nWe prepare the nodes that are in the aggregated data source and target.\n\nid1 <- MC2_edges_aggregated %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_aggregated <- rbind(id1, id2) %>%\n  distinct()\nMC2_nodes_aggregated<-merge(MC2_nodes_aggregated, MC2_nodes, by=\"id\")\n\nMC2_nodes_aggregated\n\n                                                        id     shpcountry\n1                                                    -1155           <NA>\n2                                                     -131           <NA>\n3                                                     -206           <NA>\n4                                                    -3305           <NA>\n5                                                    -3346           <NA>\n6                                                    -3413           <NA>\n7                                                     -534           <NA>\n8                                                     -811           <NA>\n9                           3 Oceanography ОАО Marine life       Faraluna\n10                             3 Trawler Corp Distribution     Brindisola\n11                      Adriatic Tuna Shipyard GmbH United   Thessalandia\n12                              Adriatic Tuna ОАО Carriers        Marebak\n13                  Andhra Pradesh   Sextant Oyj Forwading      Zawalinda\n14                       Anthony Limited Liability Company        Mawazam\n15                                Aqua Aura LLC Investment        Marebak\n16                           AquaCuisine AG Marine ecology        Marebak\n17                  Arena Azul Ltd. Liability Co Solutions        Marebak\n18                              Arena del Sol Incorporated        Marebak\n19                               Arunachal Pradesh s Brine       Nalakond\n20                        Arunachal Pradesh s Oceanography       Nalakond\n21                                       Bahía del Este AB       Galduzim\n22                                Belgian Cod BV Solutions    Coralmarica\n23                              Blue Horizon Inc Transport        Marebak\n24                                Blue Nile  LLC and Son's        Marebak\n25                             Blue Ridge   OJSC Forwading      Zawalinda\n26                                       Brisa del Este BV           <NA>\n27                                Brisa Marina CJSC Bonito      Zawalinda\n28                                           Bu yu wang AG      Zawalinda\n29                                     Caracola Azul Oyj &    Playa Solis\n30                     Casablanca Coast  Flounder Oyj Line        Marebak\n31                Chhattisgarh   Estuary Sp Marine biology   Thessalandia\n32                          Chuan gou  Co Marine sanctuary        Marebak\n33            Coastal Castaway Coast Corporation Worldwide     Alverossia\n34                         Congo Rapids   Ltd. Corporation    Brindivaria\n35                                  Coral Cove BV Delivery       Quornova\n36                             Costa de Coral Kga Delivery      Riodelsol\n37      Costa de Coral Limited Liability Company Transport        Marebak\n38                          Costa de la Felicidad Shipping     Alverossia\n39                                         Costa de Oro BV      Zawalinda\n40                                       Costa del Sol A/S      Isliandor\n41                                     Costa del Viento NV        Marebak\n42               David Limited Liability Company Worldwide        Marebak\n43                       Diao yu bi sai  Roe LLC Logistics        Marebak\n44                  Dnipro  Breakwater LC Marine sanctuary      Zawalinda\n45                  Drakensberg  Limited Liability Company      Jiraputra\n46                                Estrella de la Costa SRL        Mawazam\n47                                      Estrella de Mar AB      Zawalinda\n48                           Estrella del Mar ОАО Shipping        Marebak\n49                            Faroe Islands  Company World      Zawalinda\n50                                  Fin Addiction Ltd Line        Marebak\n51                    Fisherman's Best Marine conservation        Marebak\n52                   Great Ruaha River  Rybachit Sagl Line        Marebak\n53                               hǎi dǎn Corporation Wharf        Marebak\n54                                     hǎi mǎ AS Sea spray        Marebak\n55                                   Haryana s Plc Transit        Marebak\n56                                       Hook S.A. de C.V.   Thessalandia\n57                     Isla del Tesoro GmbH & Co. KG Chart    Coralmarica\n58                              jīn qiāng yú SRL Worldwide      Zawalinda\n59                                   Kga Ltd. Liability Co      Zawalinda\n60                          Kong zhong diao yu  Ges.m.b.H.        Oceanus\n61                             Lake Manyara   ОАО Holdings        Marebak\n62                                    Lake Nasser  Tom yum        Marebak\n63                       Lake Victoria Nile    Corporation   Sol y Oceana\n64                               Lake Victoria Nile    Inc      Isliandor\n65                                        lú yú A/S Marine    Playa Solis\n66                           Madagascar Coast  AG Freight         Oceanus\n67                    Malawi Rift   GmbH & Co. KG Tidepool     Utoporiana\n68             Manipur  Market Ltd. Liability Co Transport        Marebak\n69                           Mar de Cielo Ltd. Corporation       Rio Isla\n70                                       Mar del Este CJSC       Merigrad\n71                                    Mar del Norte United      Zawalinda\n72                             Mar del Oeste S.p.A. United        Marebak\n73                                 Nagaland Sea Catch GmbH        Marebak\n74          Nagaland Sea Catch Ltd. Liability Co Logistics        Marebak\n75             Nautical Navigators Ges.m.b.H. Distribution     Alverossia\n76                                        OceanKing s SE _      Zawalinda\n77                                     Ola Azul SRL United        Marebak\n78                                        Olas del Sur Ltd       Faraluna\n79                                         Pao gan SE Seal     Alverossia\n80            Playa de Arena Submarine S.A. de C.V. Marine     Vesperanda\n81                                         Playa de Oro BV        Marebak\n82                                     Playa del Cielo ОАО        Marebak\n83                           Portuguese Sea Bass AS Marine        Marebak\n84                             Punjab  Market LC Worldwide   Thessalandia\n85        Punjab Sea  Ltd. Corporation Marine conservation        Marebak\n86                       ReefR estaurant Oyj International       Coralada\n87                 ReefRider Foods Ltd. Corporation Family        Oceanus\n88                                 Rift Valley fishery Inc Puerto del Mar\n89                                 Sahara  LLC BV Shipping   Thessalandia\n90                        Sailors and Surfers Kga Overseas        Galdara\n91                                  SaltSea Corp and Son's        Marebak\n92                   Saltwater Sirens S.p.A. International        Marebak\n93               Saltwater Supreme Pelican Ltd Enterprises     Puerto Sol\n94                           Sander Ltd. Corporation Leska      Zawalinda\n95              Scottish Lobster Cruise ship SRL Transport        Marebak\n96                       Scottish Oysters Consulting Leska      Zawalinda\n97                                      Sea Spray AS Cargo      Zawalinda\n98                                   Sea Star LLC Shipping       Zimawand\n99                          SeaBass  Lighthouse AG Express   Thessalandia\n100                        SeaBass Company Express Estuary      Zawalinda\n101                      Selous Game Reserve  S.A. de C.V.      Isliandor\n102                      Selous Game Reserve  SE Solutions        Marebak\n103                                 Senegal Coast  AG Line        Marebak\n104                                     Shona S.A. de C.V.      Zawalinda\n105                                 Shou gan  Sagl Mudflat        Oceanus\n106                        Sparrmans  Inc Marine sanctuary        Marebak\n107                                    Surf and Sea Marina      Zawalinda\n108                              Tide Turners A/S Delivery        Marebak\n109                      Transit Limited Liability Company    Coralmarica\n110                           Turkish Calamari A/S & Son's        Marebak\n111                                    Uttar Pradesh s Oyj        Marebak\n112                              Uttar Pradesh s Transport       Galduzim\n113                     Uttar Pradesh Sea  Company Seafoam     Utoporiana\n114 Uttarakhand  Market Limited Liability Company Nautical        Helixia\n115                            Volga River LLC Enterprises       Quornova\n116    Wave Watchers Underwater Ltd. Corporation Solutions        Marebak\n117                    Yenisei  Eel GmbH & Co. KG Services       Merigrad\n118                                Yu xian  SRL Industrial     Sirenareef\n119                Zambezi Escarpment  Incorporated United     Kondanovia\n120                           Zambezi Rapids  Plc Holdings        Marebak\n      rcvcountry\n1        Oceanus\n2        Oceanus\n3        Oceanus\n4        Oceanus\n5        Oceanus\n6        Oceanus\n7        Oceanus\n8        Oceanus\n9        Oceanus\n10       Oceanus\n11       Oceanus\n12       Oceanus\n13  Sol y Oceana\n14       Oceanus\n15          <NA>\n16       Marebak\n17          <NA>\n18       Marebak\n19       Oceanus\n20       Oceanus\n21          <NA>\n22   Coralmarica\n23       Marebak\n24          <NA>\n25       Oceanus\n26       Oceanus\n27  Sol y Oceana\n28       Oceanus\n29       Oceanus\n30       Oceanus\n31       Oceanus\n32       Marebak\n33       Oceanus\n34       Oceanus\n35       Oceanus\n36       Oceanus\n37       Oceanus\n38       Oceanus\n39       Oceanus\n40       Oceanus\n41       Marebak\n42     Kuzalanda\n43       Oceanus\n44     Zawalinda\n45       Oceanus\n46       Oceanus\n47          <NA>\n48          <NA>\n49   Coralmarica\n50          <NA>\n51       Oceanus\n52       Oceanus\n53       Oceanus\n54       Marebak\n55          <NA>\n56  Thessalandia\n57       Oceanus\n58          <NA>\n59          <NA>\n60       Oceanus\n61       Oceanus\n62          <NA>\n63       Oceanus\n64       Oceanus\n65       Oceanus\n66       Oceanus\n67    Utoporiana\n68       Marebak\n69       Oceanus\n70       Oceanus\n71       Oceanus\n72       Oceanus\n73          <NA>\n74          <NA>\n75          <NA>\n76       Oceanus\n77          <NA>\n78       Oceanus\n79       Oceanus\n80       Oceanus\n81       Oceanus\n82       Marebak\n83          <NA>\n84       Oceanus\n85       Marebak\n86      Coralada\n87       Oceanus\n88       Oceanus\n89       Oceanus\n90       Oceanus\n91       Marebak\n92          <NA>\n93       Oceanus\n94     Riodelsol\n95       Marebak\n96  Sol y Oceana\n97       Oceanus\n98  Sol y Oceana\n99  Thessalandia\n100 Sol y Oceana\n101      Oceanus\n102         <NA>\n103      Oceanus\n104     Valtalmo\n105      Oceanus\n106         <NA>\n107      Oceanus\n108         <NA>\n109      Oceanus\n110      Marebak\n111      Oceanus\n112      Oceanus\n113      Oceanus\n114      Oceanus\n115      Oceanus\n116      Marebak\n117      Oceanus\n118      Oceanus\n119      Oceanus\n120      Marebak"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#temporal-analysis",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#temporal-analysis",
    "title": "Take Home Exercise 02",
    "section": "Temporal analysis",
    "text": "Temporal analysis\n\noverall_trend <-MC2_edges_filtered%>%\n  group_by(monthyear) %>%\n  summarise(weight=n(),\n            weightkg=mean(weightkg)) %>%\n  arrange(monthyear) %>% \n  ungroup()\n\noverall_trend %>% \n  ggplot(aes(x = monthyear, y=weightkg))+\n  geom_point()+\n  geom_line()+\n  theme(legend.position=\"none\")+\n  theme_minimal()\n\n\n\n\n\noverall_trend <-MC2_edges_filtered%>%\n  filter(monthyear<'Jan 2034' & monthyear>='Jan 2033') %>%\n  mutate(monthyear=as.factor(monthyear)) %>% \n  group_by(weekday,monthyear) %>%\n  summarise(weight=n(),\n            weightkg=mean(weightkg)) %>%\n  arrange(weekday,monthyear) %>% \n  ungroup()\n\noverall_trend %>% \n  ggplot(aes(monthyear,weekday, fill=weight))+\ngeom_tile(colour='white',\n          size=0.1)+ \nscale_fill_gradient(name = \"No of shipments\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n   theme_minimal()+\nlabs(x = NULL, \n     y = NULL, \n     title = \"No of shipments by month year and weekday\") +\ntheme(axis.text.x=element_text(angle=30, vjust=0.5),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )\n\n\n\n\n\noverall_trend <-MC2_edges_filtered%>%\n  filter(monthyear>='Jan 2034') %>%\n  mutate(monthyear=as.factor(monthyear)) %>% \n  group_by(weekday,monthyear) %>%\n  summarise(weight=n(),\n            weightkg=mean(weightkg)) %>%\n  arrange(weekday,monthyear) %>% \n  ungroup()\n\noverall_trend %>% \n  ggplot(aes(monthyear,weekday, fill=weight))+\ngeom_tile(colour='white',\n          size=0.1)+ \nscale_fill_gradient(name = \"No of shipments\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n   theme_minimal()+\nlabs(x = NULL, \n     y = NULL, \n     title = \"No of shipments by month year and weekday\") +\ntheme(axis.text.x=element_text(angle=30, vjust=0.5),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )\n\n\n\n\n\nsource_trend<-MC2_edges_filtered%>%\n  group_by(source, monthyear) %>%\n  summarise(weight=n(),\n            weightkg=sum(weightkg)) %>%\n  arrange(monthyear) %>% \n  ungroup()\nsource_trend\n\n# A tibble: 73,051 × 4\n   source                                          monthyear weight weightkg\n   <fct>                                           <yearmon>  <int>    <int>\n 1 2 Limited Liability Company                     Jan 2028       2    38025\n 2 4 S.A. de C.V. Shipping                         Jan 2028       2    37705\n 3 5 Sashimi NV Holdings                           Jan 2028       3    65515\n 4 8 Aquamarine Limited Liability Company Holdings Jan 2028       7   138640\n 5 9 Charter Boat  Plc Overseas                    Jan 2028      14   359390\n 6 9 Marine biology Ltd Family                     Jan 2028      30   465345\n 7 Adair S.A. de C.V.                              Jan 2028       1    19995\n 8 Adriatic Catch Ltd Transport                    Jan 2028       2    24005\n 9 Adriatic Mackerel NV Shipping                   Jan 2028       2    54970\n10 Adriatic Squid Mussel Sp Transit                Jan 2028       2    75140\n# ℹ 73,041 more rows\n\n\n\nsource_trend<-source_trend %>% \n  group_by(source) %>%\n  mutate(weightkg_pct_change=round((weightkg/lag(weightkg)-1)*100,0)) %>% \n  mutate(weight_pct_change=round((weight/lag(weight)-1)*100,0)) %>% \n  mutate(count=n()) %>% \n  filter(count==84)\n\nsummary(source_trend)\n\n                                     source       monthyear        weight      \n Ancla del Mar Marine ecology           :  84   Min.   :2028   Min.   :  1.00  \n Aqua Aura SE Marine life               :  84   1st Qu.:2030   1st Qu.:  9.00  \n AquaCuisine  Ltd. Liability Co Nautilus:  84   Median :2031   Median : 16.00  \n Arena del Sol SRL                      :  84   Mean   :2031   Mean   : 35.06  \n Brisa del Este Brine                   :  84   3rd Qu.:2033   3rd Qu.: 30.00  \n Brisa Marina CJSC Bonito               :  84   Max.   :2035   Max.   :709.00  \n (Other)                                :3360                                  \n    weightkg        weightkg_pct_change weight_pct_change     count   \n Min.   :     800   Min.   : -100.00    Min.   : -96.00   Min.   :84  \n 1st Qu.:  165091   1st Qu.:  -29.00    1st Qu.: -29.00   1st Qu.:84  \n Median :  324048   Median :   -0.50    Median :   0.00   Median :84  \n Mean   : 1069172   Mean   :   32.52    Mean   :  24.12   Mean   :84  \n 3rd Qu.:  673940   3rd Qu.:   42.00    3rd Qu.:  40.00   3rd Qu.:84  \n Max.   :24550125   Max.   :14599.00    Max.   :3100.00   Max.   :84  \n                    NA's   :46          NA's   :46                    \n\n\n\nset.seed(1234)  \nggplot(source_trend, aes(x = monthyear, y = weight_pct_change,\n             colour=source))+\n  geom_point()+\n  geom_line()+\n  theme(legend.position=\"none\")\n\n\n\n\n\nset.seed(1234) \nggplot(source_trend, aes(x = monthyear, y = weightkg_pct_change,\n             colour=source))+\n  geom_point()+\n  geom_line()+\n  theme(legend.position=\"none\")\n\n\n\n\n\ntarget_trend<-MC2_edges_filtered%>%\n  group_by(target,year) %>%\n  summarise(weight=n(),\n            weightkg=sum(weightkg)) %>%\n  arrange(year)\ntarget_trend\n\n# A tibble: 11,889 × 4\n# Groups:   target [5,306]\n   target  year weight weightkg\n   <fct>  <dbl>  <int>    <int>\n 1 -100    2028      5    94520\n 2 -10012  2028      1    22645\n 3 -10013  2028      7   156325\n 4 -10014  2028      6   143880\n 5 -10015  2028      1    19620\n 6 -10016  2028     10   126070\n 7 -10017  2028      1    23100\n 8 -10018  2028      1    22830\n 9 -10019  2028      1    22020\n10 -10020  2028      1    18530\n# ℹ 11,879 more rows\n\n\n\ntarget_trend<-target_trend %>% \n  group_by(target) %>%\n  mutate(weightkg_pct_change=round((weightkg/lag(weightkg)-1)*100,0)) %>% \n  mutate(weight_pct_change=round((weight/lag(weight)-1)*100,0)) %>% \n  mutate(count=n()) %>% \n  filter(count==7)\n\nsummary(target_trend)\n\n     target          year          weight          weightkg        \n -100   :   7   Min.   :2028   Min.   :   1.0   Min.   :       80  \n -1320  :   7   1st Qu.:2029   1st Qu.:   7.0   1st Qu.:   134881  \n -159   :   7   Median :2031   Median :  22.0   Median :   467022  \n -2     :   7   Mean   :2031   Mean   : 162.6   Mean   :  4259007  \n -213   :   7   3rd Qu.:2033   3rd Qu.:  82.0   3rd Qu.:  1912420  \n -250   :   7   Max.   :2034   Max.   :7477.0   Max.   :194890245  \n (Other):2744                                                      \n weightkg_pct_change weight_pct_change      count  \n Min.   :  -100.0    Min.   :  -99.00   Min.   :7  \n 1st Qu.:   -42.0    1st Qu.:  -39.00   1st Qu.:7  \n Median :     0.0    Median :    0.00   Median :7  \n Mean   :   258.9    Mean   :   73.93   Mean   :7  \n 3rd Qu.:    70.0    3rd Qu.:   61.25   3rd Qu.:7  \n Max.   :126216.0    Max.   :16467.00   Max.   :7  \n NA's   :398         NA's   :398                   \n\n\n\n  ggplot(target_trend, aes(x = year, y = weight_pct_change,\n             colour=target))+\n  geom_point()+\n  geom_line()+\n  theme(legend.position=\"none\")\n\n\n\n\n\n  ggplot(target_trend, aes(x = year, y = weightkg_pct_change,\n             colour=target))+\n  geom_point()+\n  geom_line()+\n  theme(legend.position=\"none\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#community-dectection",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#community-dectection",
    "title": "Take Home Exercise 02",
    "section": "Community Dectection",
    "text": "Community Dectection\n\ngraph<-tbl_graph(nodes=MC2_nodes_aggregated,                          edges=MC2_edges_aggregated,                          directed = FALSE)\n\n\ngraph <-graph%>%\n  mutate(community = as.factor(group_optimal(weights = weight))) \ngraph\n\n# A tbl_graph: 120 nodes and 217 edges\n#\n# An undirected multigraph with 13 components\n#\n# A tibble: 120 × 4\n  id    shpcountry rcvcountry community\n  <fct> <fct>      <fct>      <fct>    \n1 -1155 <NA>       Oceanus    4        \n2 -131  <NA>       Oceanus    4        \n3 -206  <NA>       Oceanus    2        \n4 -3305 <NA>       Oceanus    2        \n5 -3346 <NA>       Oceanus    11       \n6 -3413 <NA>       Oceanus    11       \n# ℹ 114 more rows\n#\n# A tibble: 217 × 5\n   from    to hscode  year weight\n  <int> <int> <fct>  <dbl>  <int>\n1     1     2 304810  2030     22\n2     1     2 304810  2032     22\n3     3     4 304810  2029     37\n# ℹ 214 more rows\n\n\n\nedges<-graph %>% \n  activate(edges) %>% \n  as.tibble()\n\nnodes<-graph %>% \n  activate(nodes) %>% \n  as.tibble() %>% \n  rename(label=id) %>% \n  mutate(id=row_number()) %>% \n  rename(group=community)\n\n\nvisNetwork(nodes,\n           edges) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123) %>% \n  visOptions(highlightNearest = TRUE, \n             nodesIdSelection = TRUE)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html",
    "title": "In Class Exercise 7",
    "section": "",
    "text": "Load packages\n\npacman::p_load(ggHoriPlot, ggthemes, tidyverse)\n\n\n\nImport data\n\naverp <-read_csv(\"data/AVERP.csv\")\n\n\naverp %>% \n  mutate(`Date`=dmy(`Date`))\n\n# A tibble: 7,452 × 3\n   Date       `Consumer Items`               Values\n   <date>     <chr>                           <dbl>\n 1 2014-01-01 Wholemeal Bread (Per 400 Gram)   2.05\n 2 2014-02-01 Wholemeal Bread (Per 400 Gram)   2.05\n 3 2014-03-01 Wholemeal Bread (Per 400 Gram)   2.04\n 4 2014-04-01 Wholemeal Bread (Per 400 Gram)   2.04\n 5 2014-05-01 Wholemeal Bread (Per 400 Gram)   2.05\n 6 2014-06-01 Wholemeal Bread (Per 400 Gram)   2.05\n 7 2014-07-01 Wholemeal Bread (Per 400 Gram)   2.05\n 8 2014-08-01 Wholemeal Bread (Per 400 Gram)   2.05\n 9 2014-09-01 Wholemeal Bread (Per 400 Gram)   2.04\n10 2014-10-01 Wholemeal Bread (Per 400 Gram)   2.05\n# ℹ 7,442 more rows\n\nglimpse(averp)\n\nRows: 7,452\nColumns: 3\n$ Date             <chr> \"1/1/2014\", \"1/2/2014\", \"1/3/2014\", \"1/4/2014\", \"1/5/…\n$ `Consumer Items` <chr> \"Wholemeal Bread (Per 400 Gram)\", \"Wholemeal Bread (P…\n$ Values           <dbl> 2.05, 2.05, 2.04, 2.04, 2.05, 2.05, 2.05, 2.05, 2.04,…\n\n\n\n# averp %>% \n#   filter(Date >= \"2018-01-01\") %>%\n#   ggplot() +\n#   geom_horizon(aes(x = Date, y=Values),\n#                origin = \"midpoint\",\n#                horizonscale = 6)+\n#   facet_grid(`Consumer Items`~.)+\n#     theme_few() +\n#   scale_fill_hcl(palette = 'RdBu')\n  # theme(panel.spacing.y=unit(0, \"lines\"), strip.text.y = element_text(\n  #   size = 5, angle = 0, hjust = 0),\n  #   legend.position = 'none',\n  #   axis.text.y = element_blank(),\n  #   axis.text.x = element_text(size=7),\n  #   axis.title.y = element_blank(),\n  #   axis.title.x = element_blank(),\n  #   axis.ticks.y = element_blank(),\n  #   panel.border = element_blank()\n  #   ) +\n  #   scale_x_date(expand=c(0,0), date_breaks = \"3 month\", date_labels = \"%b%y\") +\n  # ggtitle('Average Retail Prices of Selected Consumer Items (Jan 2018 to Dec 2022)')\n\n\n\nconvert character(0) in product_services to NA or add character(0) into stop words"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "title": "Take-home_Ex03",
    "section": "",
    "text": "pacman::p_load(jsonlite, tidygraph,ggraph,visNetwork,graphlayouts,ggforce,tidytext,tidyverse)\n\nUndirected graph\n\nmc3_data <-fromJSON(\"data/MC3.json\")\n\nSource, target and type data is a list\n\nmc3_edges <-as_tibble(mc3_data$links)\nglimpse(mc3_edges)\n\nRows: 24,038\nColumns: 3\n$ source <list> \"Lake Chad  Catchers Limited Liability Company Worldwide\", \"La…\n$ target <list> \"Erin Flores\", \"Linda Lee\", \"Sharon Coleman\", \"John Rivera\", \"…\n$ type   <list> \"Beneficial Owner\", \"Beneficial Owner\", \"Beneficial Owner\", \"B…\n\n\n\nmc3_edges <-mc3_edges %>% \n  distinct() %>%\n  mutate(source=as.character(source),\n         target=as.character(target),\n         type=as.character(type)) %>% \n  group_by(source, target, type) %>% \n  summarise(weights=n()) %>% \n  filter(source!=target) %>% \n  ungroup()\n\n`summarise()` has grouped output by 'source', 'target'. You can override using\nthe `.groups` argument.\n\n\n\nmc3_nodes <-as_tibble(mc3_data$nodes)\n\n\nmc3_nodes<-mc3_nodes %>% \n  mutate(country=as.character(country),\n         id=as.character(id),\n         product_services=as.character(product_services),\n         revenue_omu=as.numeric(as.character(revenue_omu)),\n         type=as.character(type)) %>% \n  select(id, country, type, revenue_omu, product_services)\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `revenue_omu = as.numeric(as.character(revenue_omu))`.\nCaused by warning:\n! NAs introduced by coercion\n\n\n\nggplot(mc3_nodes, aes(x=type))+\n  geom_bar()\n\n\n\n\nPossible type of relationship\nowner to business\ncompany to company\ncompany contact to company- customer to business\nor by product_service"
  }
]